

import React,{Component} from 'react';
import {
    View,
    Text,
    StyleSheet,
    Image,
    TextInput,
    FlatList,
    TouchableOpacity,
    AsyncStorage,
    Alert,
    Switch,
    Button,
    ImageBackground,
    Dimensions,
    ScrollView
} from 'react-native';
import RefreshListView, {RefreshState} from 'react-native-refresh-list-view'
import {sys,NoDataView} from "../../common/Data"

import {styles} from "../common/homeStyle"



import HttpUtils from "../../common/HttpUtil"

const RIGHT_WIDTH = Dimensions.get('window').width*0.75;
const LEFT_WIDTH = Dimensions.get('window').width*0.25;
const SCREEN_WIDTH = Dimensions.get('window').width;

export  class LeftButton extends Component {

    constructor() {
        super();
        this.state = {
            index : 0,
            selected: false,

        };
    }


    async componentDidMount() {
        this.setState({
            selected: this.props.selected,
            index: this.props.index
        });

    }


    render() {

        var { title,xuanzo ,index} = this.props;

        var style = this.state.selected?styles.leftBtnSelected : styles.leftBtn;

        var  textstyle = this.state.selected?styles.leftTextSelected : styles.leftText;

        return(
            <TouchableOpacity  style={style }
                               onPress={() => {
                                   this.props.onPress();
                               }}
            >
                <Text style={textstyle}>{title}</Text>
            </TouchableOpacity>

        )
    }

}


export class CustomButton extends Component {

    constructor() {
        super();
        this.state = {

            selected: false,
            dwd:{},
            dxds:{}
        };
    }




    render() {
        var { title,style,xuanzo,type  } = this.props;


        if(style==undefined){
            style = {backgroundColor:sys.redColor,borderRadius:RIGHT_WIDTH/14,
                width:RIGHT_WIDTH/7,height:RIGHT_WIDTH/7,marginLeft: (RIGHT_WIDTH-RIGHT_WIDTH/7*5)/6}
        }


        if(xuanzo==1)this.state.selected=true;

        const { selected } = this.state;



        // if(type == 1){
            return (

                <TouchableOpacity  style={selected?styles.stouchButton : styles.touchButton}
                                   onPress={() => {

                                       this.setState({ selected: !selected } ,() => {
                                           this.props.onPress();
                                       })
                                   }}>
                    <Text style={selected?styles.stouchButtonText: styles.touchButtonText}>{title}</Text>
                </TouchableOpacity>



            );

        // }else {
        //     return (
        //
        //         <TouchableOpacity  style={selected?styles.stouchButton : styles.touchButton}
        //                            onPress={() => {
        //                                var arr = [];
        //                                if(this.props.title=='大'){
        //                                    arr = [5,6,7,8,9]
        //                                }else if(this.props.title=='小'){
        //                                    arr = [0,1,2,3,4]
        //                                }else if(this.props.title=='单'){
        //                                    arr = [1,3,5,7,9]
        //                                }else if(this.props.title=='双'){
        //                                    arr = [0,2,4,6,8]
        //                                }else if(this.props.title=='全'){
        //                                    arr = [0,1,2,3,4,5,6,7,8,9]
        //                                }
        //
        //                                if(arr.length>0){
        //                                    for(var key in thishead_arr[this.props.id].refs){
        //                                        thishead_arr[this.props.id].refs[key].setState({
        //                                            selected:false
        //                                        });
        //                                    }
        //
        //                                    [0,1,2,3,4,5,6,7,8,9].map((text,index)=>{
        //                                        let reid = this.props.id;
        //                                        let res = reid+text;
        //                                        let headres = reid+this.props.title;
        //                                        thiz.refs[res].setState({selected:false})
        //                                    })
        //
        //                                    arr.map((text,index)=>{
        //                                        let reid = this.props.id;
        //                                        let res = reid+text;
        //                                        let headres = reid+this.props.title;
        //                                        thiz.refs[res].setState({selected:!selected})
        //
        //                                    })
        //                                }
        //
        //                                this.setState({ selected: !selected } ,() => {
        //                                    //这里打印的是最新的state值
        //                                    let wArr = [];
        //                                    let qArr = [];
        //                                    let bArr = [];
        //                                    let sArr = [];
        //                                    let gArr = [];
        //                                    for(var key in thiz.refs){
        //                                        if(thiz.refs[key].state.selected){
        //                                            if(!isNaN(key.substr(2,1))){
        //                                                if(key.substr(0,2)=='万位'){
        //                                                    wArr.push(key.substr(2,1));
        //                                                }else if(key.substr(0,2)=='千位'){
        //                                                    qArr.push(key.substr(2,1));
        //                                                }else if(key.substr(0,2)=='百位'){
        //                                                    bArr.push(key.substr(2,1))
        //                                                }else if(key.substr(0,2)=='十位'){
        //                                                    sArr.push(key.substr(2,1));
        //                                                }else if(key.substr(0,2)=='个位'){
        //                                                    gArr.push(key.substr(2,1))
        //                                                }
        //                                            }
        //                                        }
        //                                    }
        //
        //                                    thiz.state.number_arr['w'] = wArr;
        //                                    thiz.state.number_arr['q'] = qArr;
        //                                    thiz.state.number_arr['b'] = bArr;
        //                                    thiz.state.number_arr['s'] = sArr;
        //                                    thiz.state.number_arr['g'] = gArr;
        //                                    var count = wArr.length + qArr.length + bArr.length + sArr.length + gArr.length;
        //                                    thiz.state.zhushu = count + "注";
        //                                    thiz.state.amount = count + "元";
        //                                    thiz.state.count = count;
        //
        //                                    this.props.onPress();
        //                                })
        //                            }}>
        //             <Text style={selected?styles.stouchButtonText: styles.touchButtonText}>{title}</Text>
        //         </TouchableOpacity>
        //
        //
        //     );
        // }



    }
}



