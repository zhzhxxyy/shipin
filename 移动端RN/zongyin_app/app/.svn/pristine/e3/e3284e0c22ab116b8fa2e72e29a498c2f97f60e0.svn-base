/**
 * Created by Native on 2019/2/17.
 */


import React, {Component} from 'react'
import {
    StyleSheet,
    Text,
    View,
    Dimensions,
    ScrollView, SafeAreaView,
    Button,
    TextInput,
    Alert,
    TouchableOpacity, Picker, Platform, DeviceEventEmitter
} from 'react-native';

import ScrollableTabView, {DefaultTabBar, } from 'react-native-scrollable-tab-view';

import {sys,NoDataView,isIphoneX} from "../../common/Data"
import Toast,{DURATION} from 'react-native-easy-toast';//导入弹出框组件

const host = sys.host;
const RIGHT_WIDTH = Dimensions.get('window').width*0.75;
const LEFT_WIDTH = Dimensions.get('window').width*0.25;

const SCREEN_WIDTH = Dimensions.get('window').width;

const  text_arr = ["定位胆","两面"];

import LeftPlayView from '../LeftPlayView';

import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'

var myThis;

export default class SixhcTeMa extends React.Component {

    constructor(props) {
        super(props);

        this.state = {
            playList:['直选','两面'],
            leftbtnSeletIndex:0,
            twoMianList:['大','小','单','双','大单','大双','小单','小双','合大','合小','合单','合双','尾大','尾小','红波','绿波','蓝波'],
            twoMianPl:['tmlmda','tmlmxiao','tmlmdan','tmlmshuang','tmlmdadan','tmlmdashuang','tmlmxiaodan','tmlmxiaoshuang'
            ,'tmlmheda','tmlmhexiao','tmlmhedan','tmlmheshuang',
            'tmlmweida','tmlmweixiao','tmlmhongbo','tmlmlvbo','tmlmlanbo'],
            nowcpinfo:{},
            lhcRates:{},
            zhushuNum:0,
            beishu:'1',

            xiazhiArr:[],
            twoMianXiaZhuPl:[],

            wanFaStr:'tmzx',
        }
    }


    render(){

        // console.log('------------');
        // console.log(this.props.nowcpinfo);
      

        myThis = this;

        // var rates = ''

        let changeKj = null;

        

        // var scrollH = sys.dheight-310;
        // if(isIphoneX()){
        //     scrollH = sys.dheight-340;

        // }

        var scrollH = sys.zhongjianIsHaveChange;

        var remark = ''
        var rate = ''


        if (this.state.leftbtnSeletIndex ==0) {

            changeKj = this.teMaZhiXuan();

            if (this.state.lhcRates.hasOwnProperty('tmzx')) {

                remark = this.state.lhcRates['tmzx']['remark'];
                rate = this.state.lhcRates['tmzx']['rate'] ;
            }

        } else {
            changeKj = this.teMaLiangMian();

            if (this.state.lhcRates.hasOwnProperty('tmlmda')) {
                remark = this.state.lhcRates['tmlmda']['remark'];
                rate = this.state.lhcRates['tmlmda']['rate'] + "~" + this.state.lhcRates['tmlmdadan']['rate'];
           
            }
        }


        let isCunZai = this.state.lhcRates.hasOwnProperty('tmzx')
        let rarmkView = isCunZai?<Text style={{
            marginLeft: 10, marginTop: 10,width: RIGHT_WIDTH - 20,
          color: sys.titleColor,textAlign: 'left',textAlignVertical: 'center',paddingBottom:10
        }}>{remark+'赔率'}<Text style={{color:sys.mainColor}}>{rate}</Text>{"倍"}</Text>:<NoDataView
              isloading = {this.props.visible} click={()=>this.props.lodaData()}
              text = {"重新加载"}></NoDataView>


        rightView = <ScrollView
            style={{
                backgroundColor:"white",
                width:RIGHT_WIDTH,
                height:scrollH
            }}
        >
                    {rarmkView}
                
                
                    {changeKj}

                    <View style={{height:50}}></View>
               
            </ScrollView>

        return(
            <KeyboardAwareScrollView
                style={styles.container}
                keyboardShouldPersistTaps = {"always"}

            >
            <View>
                
               <View style={styles.hengcontainer}>
                    <LeftPlayView scrollH={scrollH} playList={this.state.playList} playtit="999" leftclickselet={(indext,leftbtnSeletIndex)=>{

                this.leftClickSelet(indext)

                }}
               />

                {rightView}

        
                 </View>

                <View style={styles.footer} >
                    <View style={styles.yuerbar}>
                        <Text style={styles.nameHeader}>总额</Text>
                        <Text style={styles.yuer}>{this.state.beishu*2*this.state.zhushuNum + '元'}</Text>
                     </View>
                    <View style={styles.yuerbar}>
                        <Text style={styles.nameHeader}>单注：</Text>
                        <Text style={styles.yuer}>2元</Text>
                        {/*<FormInput style={styles.yuer} placeholder="111" />*/}
                    </View>
                    <View style={styles.yuerbar}>
                        <Text style={styles.nameHeader}>共</Text>
                        <Text style={styles.yuer}>{this.state.zhushuNum +'注'}</Text>
                    </View>

                </View>

                <View style={styles.beishuView} >

                    <TouchableOpacity  style={[styles.reduceBtn,{marginLeft:30}] }
                          onPress={() => {


                            if (this.state.beishu == '' || this.state.beishu == null) {
                                this.setState({
                                    beishu : '',
                                 
                                })
                                return;
                            }
    

                            if(this.state.beishu == 1){
                               return;
                            }else {
       
                               var mewBeishu = parseInt(this.state.beishu) - 1;


                                 this.setState({
                                    beishu : mewBeishu+'',

                                 })

                            }
}}
                    >
                        <Text style={styles.payButtonText} >-</Text>
                    </TouchableOpacity>


                    <TextInput underlineColorAndroid='transparent' value={this.state.beishu}
                      keyboardType='numeric'  style={styles.beishuCount}  ref="beishucount"
                      onChangeText={(text) =>{
                        text = text.replace(/[^\d]+/, '');
                        this.setState({beishu:text})}}
                    ></TextInput>

                   <TouchableOpacity  style={styles.reduceBtn }
                        onPress={() => {


                            if (this.state.beishu == '' || this.state.beishu == null) {
                                this.setState({
                                    beishu : '1',
                                    
                                })
                                return;
                            }

                           var mewBeishu = parseInt(this.state.beishu) + 1

                            this.setState({
                                 beishu : mewBeishu+'',
                            })
                        }}
                    >
                        <Text style={styles.payButtonText}>+</Text>
                    </TouchableOpacity>

                    <TouchableOpacity style={{height:45,width:sys.dwidth/2,marginLeft:sys.dwidth/2 - 160}}
                    onPress={() => {
                        this.buyClick()
                    }}
                    >
                    <TouchableOpacity  style={[styles.payButton,{marginLeft:(sys.dwidth/2 - 60)/2}]}
                                       onPress={() => {
                                          this.buyClick()
                                       }}
                    >
                        <Text style={styles.payButtonText}>下注</Text>
                    </TouchableOpacity>

                    </TouchableOpacity>

                </View>
        
        </View>
        <Toast  //提示
                    ref="toast"
                    style={{backgroundColor:'gray'}}
                    position='top'
                    positionValue={200}
                    opacity={0.6}
                    textStyle={{color:'white'}}
                />  
        </KeyboardAwareScrollView>

        )



    }



    buyClick(){
       // console.log('下注')

       let isCunZai = this.state.lhcRates.hasOwnProperty('tmzx')

       if (!isCunZai) {
        this.props.lodaData()
         return;
       }

       if (!myThis.state.zhushuNum) {

        this.refs.toast.show("请选择完整的号码!", DURATION.LENGTH_LONG);  
        return;
       }
        this.props.onPress();

    }

    leftClickSelet(indext){

        

        if (this.state.leftbtnSeletIndex == indext) {
            return;
        }

        this.cleanJiemian(true,indext)
        
    }


    cleanJiemian(isDqClean,indext) {
        for (var key in myThis.refs) {

            if ((key.indexOf("CustomTwoButton") != -1) ||(key.indexOf("CustomButton") != -1)) {

                myThis.refs[key].setState({
                    selected: false
                });
            }

        }


        if (isDqClean) {
            if (indext == 0) {
                myThis.setState({
                    wanFaStr:'tmzx',
                })
            } else if (indext == 1) {
                myThis.setState({
                    wanFaStr:'tmlm',
                })
            }
    
            this.setState({
                leftbtnSeletIndex:indext,
                xiazhiArr:[],
                twoMianXiaZhuPl:[],
                zhushuNum:0,
            })
        }else {
            this.setState({
                xiazhiArr:[],
                twoMianXiaZhuPl:[],
                zhushuNum:0,
            }) 
        }
        
    }


    teMaZhiXuan(){
           return<View style={{// 主轴方向
                flexDirection:'row',
                //  justifyContent: 'space-between',
                // 一行显示不下,换一行
                flexWrap:'wrap',
                // 侧轴方向
                width:RIGHT_WIDTH,
                alignItems:'center',}
                }>

                {sys.lhc_numData.map((info, index) => {
                    return (

                        <CustomButton ref={'CustomButton'+index} style={{height:100,width:50,backgroundColor:'red'}} key={index} info={info}  onPress={this.itemClick.bind(this, info)}/>

                    );
                })}




            </View>
    }

    teMaLiangMian(){


        return<View style={{// 主轴方向
            flexDirection:'row',
            //  justifyContent: 'space-between',
            // 一行显示不下,换一行
            flexWrap:'wrap',
            // 侧轴方向

            width:RIGHT_WIDTH,
            alignItems:'center',}
            }>

            {this.state.twoMianList.map((info, index) => {
                return (

                    <CustomTwoButton ref={'CustomTwoButton'+index} style={{height:100,width:50,backgroundColor:'red'}} key={index} indext={index} info={info}  
                    onPress={this.itemTwoClick.bind(this,index,info)}/>

                );
            })}




        </View>

    }


    countFun(isTwo) {


        if (isTwo) {
            myThis.state.xiazhiArr = [];
            myThis.state.twoMianXiaZhuPl = [];
            var index = 0
            for (var key in myThis.refs) {

                if ((key.indexOf("CustomTwoButton") != -1)) {
    
                    if(myThis.refs[key].state.selected != null&&myThis.refs[key].state.selected){
                        var plkey = myThis.state.twoMianPl[index]
                        var numStr = myThis.state.twoMianList[index];
                        myThis.state.xiazhiArr.push(numStr)
                        myThis.state.twoMianXiaZhuPl.push(plkey)

                        //console.log(myThis.state.twoMianXiaZhuPl)
                    }
                    index++;
                }
            }
        } else {
            myThis.state.xiazhiArr = [];
            var index = 0
            for (var key in myThis.refs) {

                if ((key.indexOf("CustomButton") != -1)) {
    
                    if(myThis.refs[key].state.selected != null&&myThis.refs[key].state.selected){
                        var numStr = sys.lhc_numData[index]['num'];
                        myThis.state.xiazhiArr.push(numStr)
                    }

                    // console.log(key)

                   // console.log(index)

                    index++;
                }
            }
        }

        

    }


    itemTwoClick(index,info) {



        // var plkey = myThis.state.twoMianPl[index]

        // numStr = info;
        // var plStr='0'
        
        // if (myThis.state.lhcRates.hasOwnProperty(plkey)) {
        //     plStr = myThis.state.lhcRates[plkey]['rate'];
        // } 


        // if (myThis.state.xiazhiArr.indexOf(numStr) == -1) {
        //     myThis.state.xiazhiArr.push(numStr)

        //     myThis.state.twoMianXiaZhuPl.push(plkey)
        // } else {
        //     myThis.state.xiazhiArr.splice(myThis.state.xiazhiArr.indexOf(numStr, 1))
        //     myThis.state.twoMianXiaZhuPl.splice(myThis.state.xiazhiArr.indexOf(numStr, 1))

        // }

        myThis.countFun(true)

        myThis.setState({
            xiazhiArr:myThis.state.xiazhiArr,
            twoMianXiaZhuPl:myThis.state.twoMianXiaZhuPl,
            zhushuNum:myThis.state.xiazhiArr.length,
        })
    }

    itemClick(info) {


        // 'num':'2',
    // 'bo': 'red',
    // 'sx': '鸡'

        // var numStr = info['num'];

        // if (myThis.state.xiazhiArr.indexOf(numStr) == -1) {
        //     myThis.state.xiazhiArr.push(numStr)

        // } else {
        //     myThis.state.xiazhiArr.splice(myThis.state.xiazhiArr.indexOf(numStr, 1))
        // }

        myThis.countFun(false)

        myThis.setState({
            xiazhiArr:myThis.state.xiazhiArr,
            zhushuNum:myThis.state.xiazhiArr.length,
        })



    }
}






class CustomButton extends Component {

    constructor() {
        super();
        this.state = {

            selected: false,
       
        };
    }




    // 'num':'2',
    // 'bo': 'red',
    // 'sx': '鸡'

    render() {
        var {info} = this.props;



        // console.log(info.num)
        // console.log(info.bo)
        // console.log(info.sx)


        // if(xuanzo==1)this.state.selected=true;

         const { selected } = this.state;


        return (

            <TouchableOpacity  style={selected?[styles.stouchButton,{backgroundColor:info.bo}]:styles.touchButton}
                                onPress={() => {

                                    this.setState({ selected: !selected } ,() => {
                                        //这里打印的是最新的state值
                                        this.props.onPress();

                                    })
                                }}>
                                
                <Text style={selected?styles.stouchButtonText:([styles.touchButtonText,{color:info.bo}])}>{info.num}</Text>
            </TouchableOpacity>



        );

      



    }
}

class CustomTwoButton extends Component {

    constructor() {
        super();
        this.state = {

            selected: false,
       
        };
    }


    
    // 'num':'2',
    // 'bo': 'red',
    // 'sx': '鸡'

    render() {
        
        var {info,indext} = this.props;

        var plkey = myThis.state.twoMianPl[indext]


        var plStr='0'

        //console.log(plkey)

        if (myThis.state.lhcRates.hasOwnProperty(plkey)) {
            plStr = myThis.state.lhcRates[plkey]['rate'];
        }

        // console.log(info.num)
        // console.log(info.bo)
        // console.log(info.sx)


        // if(xuanzo==1)this.state.selected=true;

         const { selected } = this.state;


        return (



            <View style={styles.twoButtonView}>

                 <TouchableOpacity  style={selected?styles.twostouchButton:styles.twotouchButton}
                                onPress={() => {

                                    this.setState({ selected: !selected } ,() => {
                                        //这里打印的是最新的state值
                                        this.props.onPress();

                                    })
                                }}>
                                
                    <Text style={selected?styles.stouchButtonText:styles.touchButtonText}>{info}</Text>
                </TouchableOpacity>
               
                 <Text style={styles.peilvText}>{plStr}</Text>
            

            </View>

        );

      



    }
}

const styles = StyleSheet.create({


    hengcontainer:{
        flexDirection:'row',
        marginTop: Platform.OS == 'ios' ? 0 : 0,
        backgroundColor:'white'
    },

    stouchButton:{
        height: 30,
        width: 30,

        borderRadius:15,
        backgroundColor: sys.mainColor,

        

        justifyContent: 'center',
        overflow: 'hidden',
      //  margin:(RIGHT_WIDTH - 150)/6,
        marginLeft:(RIGHT_WIDTH - 150)/6,
        marginTop:(RIGHT_WIDTH - 150)/6,
    },

    touchButton: {
        height: 30,
        width: 30,

        borderRadius:15,
        borderWidth:1,
        borderColor:sys.grayColor,
        backgroundColor: "white",
        justifyContent: 'center',
        overflow: 'hidden',
        marginLeft:(RIGHT_WIDTH - 150)/6,
        marginTop:(RIGHT_WIDTH - 150)/6,

    },

    touchButtonText: {
        color: sys.mainColor,
        textAlign: 'center',
    },


    stouchButtonText: {
        color: "white",
        textAlign: 'center',
    },


    twostouchButton:{
        height: 40,
        width: 60,

        borderRadius:5,
        borderWidth:1,
        borderColor:sys.mainColor,
        backgroundColor: sys.mainColor,
        justifyContent: 'center',
        overflow: 'hidden',
      //  margin:(RIGHT_WIDTH - 150)/6,

    },

    twotouchButton: {
        height: 40,
        width: 60,

        borderRadius:5,
        borderWidth:1,
        borderColor:sys.grayColor,
        backgroundColor: "white",
        justifyContent: 'center',
        overflow: 'hidden',
        
        // marginLeft:(RIGHT_WIDTH - 150)/6,
        // marginTop:(RIGHT_WIDTH - 150)/6,

    },

    twoButtonView:{
        height: 70,
        width: 60,

        backgroundColor: sys.whiteColor,
        
        marginLeft:(RIGHT_WIDTH - 180)/4,
        marginTop:10,

    },


    peilvText:{
        width:70,
        height:30,
        color:sys.titleColor,
        textAlign:'center',
        textAlignVertical:'center',
        fontSize:15,
        ...Platform.select({
            ios: { lineHeight:30},
            android: {}
        })
    },
    beishuView:{
        height: 45,
        width: SCREEN_WIDTH,
        flexDirection:'row',
        borderTopWidth:1,
        borderTopColor:sys.backgroundColor,
    },
    reduceBtn:{
        height: 30,
        width: 30,
        top:10,
        borderRadius: 3,
        backgroundColor: sys.mainColor,
        justifyContent: 'center',
        overflow: 'hidden',
        margin:2,
    },

    payButtonText: {
        color: "white",
        textAlign: 'center',
    },
    footer: {
        height: 60,
        width: SCREEN_WIDTH,
        flexDirection:'row'
    },
    yuerbar: {
        height: 60,
        width: SCREEN_WIDTH/4,
        justifyContent: 'center',
        alignContent: 'center',
    },
    nameHeader: {
        color: sys.subTitleColor,
        fontSize: 16,
        margin:5,
        // fontFamily: 'regular',
        textAlign: 'center'
    },
    yuer:{
        color:sys.mainColor,
        fontSize: 17,
        textAlign: 'center'
    },
    payButton:{
        height: 30,
        width: 60,
        top:10,
        borderRadius: 3,
        backgroundColor: sys.mainColor,
        justifyContent: 'center',
        overflow: 'hidden',
        margin:2,
    },
    beishuCount:{
        marginTop:10,
        height: 35,
        width: 60,
        lineHeight:15,
        borderRadius: 3,
        fontSize:16,
        textAlign: 'center',
        overflow: 'hidden',
        backgroundColor: 'white',
        paddingTop: 5
    },
})



