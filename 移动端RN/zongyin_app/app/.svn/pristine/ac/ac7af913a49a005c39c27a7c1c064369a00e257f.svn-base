//
//  Created by Liu Jinyong on 17/4/5.
//  Copyright © 2016年 Liu Jinyong. All rights reserved.
//
//  @flow
//  Github:
//  https://github.com/huanxsd/react-native-refresh-list-view

import React, {Component} from 'react'
import {View, StyleSheet,Text, DeviceEventEmitter,Platform,Alert,TouchableOpacity,Image,PixelRatio
    ,ScrollView,NativeModules} from 'react-native'
import RefreshListView, {RefreshState} from 'react-native-refresh-list-view'
import Cell from './Cell'
import CaipiaoFenLei from './CaipiaoFenLei'
import ScrollableTabView, {DefaultTabBar,ScrollableTabBar } from 'react-native-scrollable-tab-view';
import {NoDataView, sys,TitleHeadView, isIphoneX} from "../common/Data"
const host = sys.host;
import HttpUtils from "../common/HttpUtil"

import codePush from "react-native-code-push";
const { StatusBarManager } = NativeModules;


const caipiaoTypeList = [


{tit:'全部',tp:'./images/caipiaoType_j3.png'},    
{tit:'时时彩',tp:'./images/caipiaoType_j3.png'},
{tit:'pc蛋蛋',tp:'./images/caipiaoType_j3.png'},
{tit:'pk10',tp:'./images/caipiaoType_j3.png'},
{tit:'快三',tp:'./images/caipiaoType_j3.png'},
{tit:'六合彩',tp:'./images/caipiaoType_j3.png'},
{tit:'快乐8',tp:'./images/caipiaoType_j3.png'},
{tit:'11选5',tp:'./images/caipiaoType_j3.png'},
{tit:'排列三',tp:'./images/caipiaoType_j3.png'},
]
var clickLastTime=0;

export default class CaipiaoMore extends Component {

    
    // static  navigationOptions = ({navigation}) => {
    //     const { params } = navigation.state;

    //     return {
    //         headerTitle: '购彩',
    //         headerTitleStyle:{
    //             alignSelf:'center',
    //             flex: 1,
    //             textAlign: 'center',   
    //         },
    //         headerRight: <View />

    //     }
    // };
 


    static  navigationOptions = ({navigation}) => {
        const { params } = navigation.state;
        return {
        title:'购彩大厅',
        headerTitleStyle:{
            alignSelf:'center',
            flex: 1,
            textAlign: 'center',
            
        },
        
        
        headerRight:React.createElement(View, null, null),
       }
    };


    constructor(props) {
        super(props)

        this.state = {
            islogin:0,
            dataList:[],
            refreshState: RefreshState.HeaderRefreshing,
            currentPage:1,
            pageSize:10,
            noNetwork:false,
            noData:false,
            isloading:false,
            // caipiaoTypeList:this.props.navigation.state.params.caipiaoTypeList,
            headViewIndext:0,
            sscArr:[],
            pcddArr:[],
            PK10Arr:[],
            k3Arr:[],
            lhcArr:[],
            kenoArr:[],
            elevenArr:[],
            dpcArr:[],
        }
    }


    timingTaskStart(){//定时任务
       
        //倒计时
        this.countDownTask=setInterval(
            () => {


                for(var i=0;i<this.state.dataList.length;i++) {

                    info = this.state.dataList[i];

                    if (info.hasOwnProperty('remainTime')) {

                        var remainigTime = info['remainTime']

                        if(remainigTime>0){
                            info['remainTime']=remainigTime-1; 
                            // if(remainigTime==0){

                            //     this.getCaiPiaoTime(info);
                               
                            // }else{
                                
                            // }
                        } else {
                            if(remainigTime==0){

                                this.getCaiPiaoTime(info);
                               
                            } 
                        } 

                    }

                }

            
                // console.log('ppppp')
                // console.log(this.state.dataList)
                this.setState({dataList:this.state.dataList});


                      
            },
            1000
        );
     

    }
    timingTaskEnd(){
        this.countDownTask && clearTimeout(this.countDownTask);
    }

    componentDidMount() {
        //监听状态改变事件
       
         this.onHeaderRefresh()

        // this.appUpdate()

        this.timingTaskStart();

        this.getRemainigTime()

        storage.load('islogin', (dic) => {

         //   console.log('json is :'+JSON.stringify(dic))
            if (dic != "" && dic != null) {
                this.setState({
                    islogin:1,
                    id:dic['id'],
                    head_pic:dic['face'],
                    nick_name: dic['username'],//dic['name'],
                    balance:dic['balance'],
                    identifier:dic['identifier'],
                    describe:dic['describe'],
                    fubi:dic['fubi']?dic['fubi']:'0.00',
                    token:dic['token'],
                    host_state:dic['host_state'],
                    proxy:dic['proxy']  //1为代理
                });

               // if(ret["islogin"] != ""  && ret["islogin"] != null)
            } else {
                this.setState({
                    islogin:0,

                });
          }})
        

        //登录成功通知
        DeviceEventEmitter.addListener('ChangeUI',(dic)=>{

            //接收到详情页发送的通知，刷新首页的数据，改变按钮颜色和文字，刷新UI
            if(dic['islogin'] != 0){
                // this.getPersonInfo()
                this.setState({
                    islogin:1
                });
                //存储数据
            }else{

                this.setState({
                    islogin:0
                });
                //存储数据
                storage.save('islogin', "")
            }

        });


        //注册通知
        DeviceEventEmitter.addListener('Login',(dic)=>{
            //接收到详情页发送的通知，刷新首页的数据，改变按钮颜色和文字，刷新UI
            const {navigate} = this.props.navigation;
            this.props.navigation.navigate("Login",dic);
        });
        storage.load(host + '/AppPublic.lotteryHall.do', (dic) => {
            if (dic != "" && dic != null) {
                let dataList =  dic
                this.state.currentPage = 2;
                let state = RefreshState.Idle;
                let nodata = false;
                this.setState({
                    dataList: dataList,
                    refreshState: state,
                    noData:nodata,
                    noNetwork:false,
                    isloading:false,
                })
            }
         })
    }

    componentWillUnmount() {
        //删除状态改变事件监听
        DeviceEventEmitter.removeListener('ChangeUI');
        DeviceEventEmitter.removeListener('Login');
     
        this.timingTaskEnd();
     }

   
   

    appUpdate(){
        // codePush.sync({
        //     updateDialog: {
        //         appendReleaseDescription: true,
        //         descriptionPrefix:'\n\n有新版本：\n',
        //         title:'更新',
        //         mandatoryUpdateMessage:'',
        //         mandatoryContinueButtonLabel:'更新',
        //     },
        //     mandatoryInstallMode:codePush.InstallMode.IMMEDIATE,
        // });
    }



    onHeaderRefresh = () => {
        this.state.currentPage = 1;
        this.setState(
            {
                refreshState: RefreshState.HeaderRefreshing,
            })
            //获取测试数据
        // if(this.state.refreshState == RefreshState.Idle){
            this.getDataList(true)
        // }

    }

    onFooterRefresh = () => {

        this.setState({
            refreshState: RefreshState.FooterRefreshing,
        })
        //
        // if(this.state.refreshState == RefreshState.Idle){
            this.getDataList(false)
        // }

    }


    getDataList(isReload) {


        this.setState({
            isloading:true,
        })

        let codeurl = host + '/AppPublic.lotteryHallNew.do';
        let formData = new FormData();
        HttpUtils.post(codeurl,formData)
            .then(result=>{
                if(result['respCode']==1){
                    let testData = result['data']['list'];
                    let newList = testData.map((data) => {
                        return {
                            id: data.id?data.id:1,
                            typeid: data.typeid,
                            title: data.title,
                            ftitle: data.ftitle,
                            pic:data.pic,
                            name:data.name
                        }
                    });
                    storage.save(codeurl, newList)

                    let dataList =  isReload ? newList : [...this.state.dataList, ...newList]
                    this.state.currentPage = parseInt(dataList.length/this.state.pageSize)+2;
                    let state = dataList.length >= result['data']['total'] ? RefreshState.NoMoreData : RefreshState.Idle;
                    let nodata = false;
                    if(isReload){
                        state = RefreshState.Idle;

                        if(testData.length == 0){
                            nodata=true;
                        }
                    }

                    this.setState({
                        dataList: dataList,
                        refreshState: state,
                        noData:nodata,
                        noNetwork:false,
                        isloading:false,
                    })

                    this.getRemainigTime()
                }else{
                     this.setState({
                        refreshState: RefreshState.Idle,
                         noNetwork:false,
                         isloading:false,
                    })
                }

            })
            .catch(error=>{
                storage.load(codeurl, (dic) => {
                    if (dic != "" && dic != null) {
                        let dataList =  dic
                        this.state.currentPage = 2;
                        let state = RefreshState.Idle;
                        let nodata = false;
                        if(isReload){
                            state = RefreshState.Idle;
                        }
                        this.setState({
                            dataList: dataList,
                            refreshState: state,
                            noData:nodata,
                            noNetwork:false,
                            isloading:false,
                        })


                    }
                 })

            })
    }




   //获取开奖的剩余时间
   getRemainigTime(){


    var size=this.state.dataList.length;
        for(var i=0;i<size;i++){
            var info = this.state.dataList[i]
           // this.getCaiPiaoTime(info['name'],info['typeid']); 
            this.getCaiPiaoTime(info)
        }    
    }



   // getCaiPiaoTime(name,typeid){
    getCaiPiaoTime(info){

        console.log('1111111')
        console.log(info['name'],info['typeid'])

        let codeurl = sys.host + "/AppApijiekou.lotterytimes";
        let formData = new FormData();
        formData.append('lotteryname',info['name']);
        formData.append('cptype',info['typeid']);
        
        HttpUtils.post(codeurl,formData)
            .then(result=>{
                if(result['respCode']==1){
            
                    // var size= this.state.dataList.length;


                //    for(var i=0;i<size;i++){
                //      var info = this.state.dataList[i]
                //      if(info['name']==name&&info['typeid']==typeid){

                //         info['curExpect'] = result['data']['currFullExpect'];
                //         info['lastFullExpect'] = result['data']['lastFullExpect'];
                //         info['remainTime'] = result['data']['remainTime'];

                //         break;
                //      }
                //    }

                info['curExpect'] = result['data']['currFullExpect'];
                info['lastFullExpect'] = result['data']['lastFullExpect'];
                info['remainTime'] = result['data']['remainTime'];

                console.log('info')
                console.log(info)
                // console.log(this.state.dataList)
                   

                }
            }).catch(error=>{
            })
    }



    keyExtractor = (item, index) => {
        return index.toString()
    }

    renderCell = (info) => {
        return <Cell info={info.item}  onPress={this.itemClick.bind(this, info)}/>
    }

    renderAllCell = (info) => {
        return <Cell type='all' info={info.item} onPress={this.itemClick.bind(this, info)}/>
    }


    itemClick(e){
        var nowTime= (new Date()).getTime();
        if(Math.abs(nowTime-clickLastTime)<sys.clickIntervalTime){
            //小于0.5秒
            return false;
        }
        clickLastTime=nowTime;

        if(this.state.islogin != 1){
            DeviceEventEmitter.emit('Login', {}); 
        }else{
            const {navigate} = this.props.navigation;
            switch(e.item.typeid){
                
                case 'ssc':
                    navigate('Cqssc',{item:e.item})
                    break;
                case 'k3':
                    navigate('KuaiThreeAction',{item:e.item})
                    break;

                case 'pk10':

                    navigate('Pkten',{item:e.item});
                    break;

                case 'lhc':
                    navigate('Sixhc',{item:e.item});
                    break;

                case 'keno':
                    navigate('Keno',{item:e.item});
                    break;
                case 'dpc':
                    navigate('Dpc',{item:e.item});
                    break;

                case 'x5':
                    navigate('ElevenSelectFive',{item:e.item});
                    break;

                case 'pcdd':                  
                navigate('PcDanDan',{item:e.item});


                default:
                    // navigate('Cqssc',{item:e.item})
                    break;
            }
        }



    }

    renderHeadView(){
        // return this.state.dataList.length?null:<NoDataView text={"暂无修行"}/>
        return null;
    }

    renderFooterView(){
        return null;
    }



    render() {

        for(var index=0;index<caipiaoTypeList.length;index++){
            var newList = [];
            for(var i=0;i<this.state.dataList.length;i++) {
                var caipiao = this.state.dataList[i]
                if (index==1) {
                    if (caipiao.typeid == 'ssc') {
                        newList.push(caipiao)
                    }
                }else if (index ==2) {
                    if (caipiao.typeid == 'pcdd') {
                        newList.push(caipiao)
                        }
                }else if (index ==3) {
                    if (caipiao.typeid == 'pk10') {
                        newList.push(caipiao)
                    }
                } else if (index ==4) {
                    if (caipiao.typeid == 'k3') {
                        newList.push(caipiao)
                    }
                } else if (index ==5) {
                    if (caipiao.typeid == 'lhc') {
                        newList.push(caipiao)
                    }
                } else if (index ==6) {
                    if (caipiao.typeid == 'keno') {
                        newList.push(caipiao)
                    }
                } else if (index ==7) {
                    if (caipiao.typeid == 'x5') {
                        newList.push(caipiao)
                    }
                } else if (index ==8) {
                    if (caipiao.typeid == 'dpc') {
                        newList.push(caipiao)
                    }
                }
            }

            if (index==1) {
                this.state.sscArr = newList
            }else if (index ==2) {
                this.state.pcddArr = newList
            }else if (index ==3) {
                this.state.PK10Arr = newList
            } else if (index ==4) {
                this.state.k3Arr = newList
            } else if (index ==5) {
                this.state.lhcArr = newList
            } else if (index ==6) {
                this.state.kenoArr = newList
            } else if (index ==7) {
                this.state.elevenArr = newList
            } else if (index ==8) {
                this.state.dpcArr = newList
            }

        }

           return <ScrollableTabView
            style={{marginTop: 0, }}
            initialPage={0}
            renderTabBar={() => <ScrollableTabBar />}
            tabBarUnderlineStyle={{backgroundColor:sys.mainColor}}// {{backgroundColor:sys.mainColor,height:0,width:(sys.dwidth)/4-20,marginLeft:0}}
            tabBarBackgroundColor={sys.whitecolor}
            tabBarActiveTextColor={sys.mainColor}
            tabBarInactiveTextColor={sys.titleColor}
            tabBarTextStyle={{fontSize: 15}}

            >
            <CaipiaoFenLei type='0' ref={'allFenlei'} newArr={this.state.dataList} 
            isloading={this.state.isloading} lodaData={()=>this.getDataList(true)}
            navigation={this.props.navigation} tabLabel='全部'>all</CaipiaoFenLei>
            
            <CaipiaoFenLei type='1' ref={'ssc'} newArr={this.state.sscArr}
            isloading={this.state.isloading} lodaData={()=>this.getDataList(true)}
            navigation={this.props.navigation} tabLabel='时时彩'>ssc</CaipiaoFenLei>

            <CaipiaoFenLei type='2' ref={'pcdd'} newArr={this.state.pcddArr} 
            isloading={this.state.isloading} lodaData={()=>this.getDataList(true)}
            navigation={this.props.navigation} tabLabel='pc蛋蛋'>pcdd</CaipiaoFenLei>
            <CaipiaoFenLei type='3' ref={'pk10'} newArr={this.state.PK10Arr} 
            isloading={this.state.isloading} lodaData={()=>this.getDataList(true)}
            navigation={this.props.navigation} tabLabel='pk10'>pk10</CaipiaoFenLei>

            <CaipiaoFenLei type='4' ref={'k3'} newArr={this.state.k3Arr}
            isloading={this.state.isloading} lodaData={()=>this.getDataList(true)}
            navigation={this.props.navigation} tabLabel='快三'>k3</CaipiaoFenLei>
            <CaipiaoFenLei type='5' ref={'lhc'} newArr={this.state.lhcArr}
            isloading={this.state.isloading} lodaData={()=>this.getDataList(true)}
            navigation={this.props.navigation} tabLabel='六合彩'>lhc</CaipiaoFenLei>
            <CaipiaoFenLei type='6' ref={'kuaileba'} newArr={this.state.kenoArr}
            isloading={this.state.isloading} lodaData={()=>this.getDataList(true)}
            navigation={this.props.navigation} tabLabel='快乐8'>len</CaipiaoFenLei>
            <CaipiaoFenLei type='7' ref={'ElevenSelectFive'} newArr={this.state.elevenArr}
            isloading={this.state.isloading} lodaData={()=>this.getDataList(true)}
            navigation={this.props.navigation} tabLabel='11选5'>ElevenSelectFive</CaipiaoFenLei>
            <CaipiaoFenLei type='8' ref={'dpc'} newArr={this.state.dpcArr} 
            isloading={this.state.isloading} lodaData={()=>this.getDataList(true)}
            navigation={this.props.navigation} tabLabel='排列三'>dpc</CaipiaoFenLei>

        </ScrollableTabView>;
        
    }

}

const styles = StyleSheet.create({
    container: {
        flex: 1,
         marginTop: Platform.OS == 'ios' ? 0 : 0,
        backgroundColor:sys.whiteColor
        
    }
})


