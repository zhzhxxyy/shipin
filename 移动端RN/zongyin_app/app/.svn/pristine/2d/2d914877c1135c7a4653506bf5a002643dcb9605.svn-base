import React from 'react';
import {
    TouchableOpacity,StyleSheet,Text,View,Image,ActivityIndicator,Platform,NativeModules
} from 'react-native';

import { Header } from 'react-navigation';

const { StatusBarManager } = NativeModules;

var Dimensions = require('Dimensions');
// iPhoneX
const X_WIDTH = 375;
const X_HEIGHT = 812;

const XR_WIDTH = 414;
const XR_HEIGHT = 896;

// screen
const SCREEN_WIDTH = Dimensions.get('window').width;
const SCREEN_HEIGHT = Dimensions.get('window').height;
// export function isIphoneX() {
//     return (
//         Platform.OS === 'ios' &&
//         ((SCREEN_HEIGHT === X_HEIGHT && SCREEN_WIDTH === X_WIDTH) ||
//             (SCREEN_HEIGHT === X_WIDTH && SCREEN_WIDTH === X_HEIGHT))
//     )
// }


export function isIphoneX() {


    if (Platform.OS === 'ios' && (SCREEN_HEIGHT==X_HEIGHT && SCREEN_WIDTH === X_WIDTH)) {
        return true;
    }

    if (Platform.OS === 'ios' && (SCREEN_WIDTH==X_HEIGHT && SCREEN_HEIGHT === X_WIDTH)) {
        return true;
    }

    if (Platform.OS === 'ios' && (SCREEN_HEIGHT==XR_HEIGHT && SCREEN_WIDTH === XR_WIDTH)) {
        return true;
    }

    if (Platform.OS === 'ios' && (SCREEN_WIDTH==XR_HEIGHT && SCREEN_HEIGHT === XR_WIDTH)) {
        return true;
    }
   
    return false;
}




export function sysScrollH(height) {

    return Platform.OS=='ios'?(isIphoneX()?320-height:290+height):310-height
}


export class TitleHeadView extends React.Component{

    render(){
        let {text} = this.props;
    
        return (
            <View style={{  flex: 1,
                justifyContent: 'center',
                alignItems: 'center'}}> 
                {/* <Text style={{ flex: 1, textAlign: 'center',fontSize:18 }}>{text}</Text> */}
                <Text style={{
        ...Platform.select({
            ios:{
                lineHeight:36,
            }
        }), textAlign: 'center',fontSize:18 ,fontWeight:'bold',color:sys.titleColor}}>{text}</Text>
         
            </View>

            
        );

    }
}



export const sys = {
    dwidth: Dimensions.get('window').width,
    dheight: Dimensions.get('window').height,


    bottomPourHeight:105,
    headKaijiHeight:70,
    toubuChangeHeight:45,
    navBarHeight:Platform.OS=='ios'?(isIphoneX()?(88+24):64):88,

    zhongjianIsHaveChange:Dimensions.get('window').height-Header.HEIGHT-
    105-70-45 - (Platform.OS=='ios'?(isIphoneX()?48:0):StatusBarManager.HEIGHT+10),

    zhongjianIsNoChange:Dimensions.get('window').height-Header.HEIGHT-105-
    70 - (Platform.OS=='ios'?(isIphoneX()?48:0):StatusBarManager.HEIGHT+10),

    // mainColor: "#EB7136",
    // grayColor: "#f2f2f2",
    // titleColor:"#333333",
    // subTitleColor:"#999999",
    // whiteColor:"white",
    //host:"http://zy.visachina.cn"
    //host:"http://www.bangdating.net",
    //host:"http://ttt.visachina.cn",
    mainColor: 'rgba(252, 66, 0, 1)',
    backgroundColor: 'rgba(248,248,248,1)',
    grayColor: 'rgba(240, 240, 240, 1)',
    lightGrayColor: 'rgba(240, 240, 240, 1)',
    titleColor:"#333333",
    subTitleColor:'gray',
    whiteColor:"#ffffff",
    silveryColor:'#e4e3eb',
    redColor:'rgba(252, 66, 0, 1)',
    yellowColor:"#fa7e00",
    blueColor:"#218ddd",
    greenColor:'rgba(113, 154, 112, 1)',
    subRedColor:"#e91e63",

    heiColor: 'rgba(18, 18, 18, 1)',

    headerColor: 'rgba(74, 74, 74, 1)',


    // host:"http://wap.520cpz.com",

    // host:"http://w.520cpz.com",//todo 修改 测试
//    host:"http://www.520cpz.com",//todo 修改 测试

//    webSocketUrl:"ws://43.255.28.62:8845",//todo 修改 测试
    //   webSocketUrl:"ws://43.255.28.62:8845",//todo 修改 测试


    host:"http://www.520hczx.com",//todo 修改 正式
    webSocketUrl:"ws://36.255.223.102:8845",//todo  修改 正式
    pl3Color:'#18CDCA',

    purpleColor:'rgba(98,93,144,1)',


    k3RusultDict:{'1':'src_page_resouce_addon_newlottery_k3_dice1.png','2':'src_page_resouce_addon_newlottery_k3_dice2.png','3':'src_page_resouce_addon_newlottery_k3_dice3.png',
            '4':'src_page_resouce_addon_newlottery_k3_dice4.png','5':'src_page_resouce_addon_newlottery_k3_dice5.png','6':'src_page_resouce_addon_newlottery_k3_dice6.png'},


    clickIntervalTime:500,//每次点击的间隔事件0.5秒
    line: {
        height: 4,
        opacity:0.5,
        backgroundColor: 'darkgray',
        width:Dimensions.get('window').width,
        marginLeft: 10
    },
    root_container:{
        flex: 1,
        backgroundColor: '#f3f3f4',
    },




//六合彩对应数据
   lhc_numData:[
    {
        'num':'01',
        'bo': 'red',
        'sx': '猪'
    },
    {
        'num':'02',
        'bo': 'red',
        'sx': '狗'
    },
    {
        'num':'03',
        'bo': 'blue',
        'sx': '鸡'
    },
    {
        'num':'04',
        'bo': 'blue',
        'sx': '猴'
    },
    {
        'num':'05',
        'bo': 'green',
        'sx': '羊'
    },
    {
        'num':'06',
        'bo': 'green',
        'sx': '马'
    },
    {
        'num':'07',
        'bo': 'red',
        'sx': '蛇'
    },
    {
        'num':'08',
        'bo': 'red',
        'sx': '龙'
    },
    {
        'num':'09',
        'bo': 'blue',
        'sx': '兔'
    },
    {
        'num':'10',
        'bo': 'blue',
        'sx': '虎'
    },
    {
        'num':'11',
        'bo': 'green',
        'sx': '牛'
    },
    {
        'num':'12',
        'bo': 'red',
        'sx': '鼠'
    },
    {
        'num':'13',
        'bo': 'red',
        'sx': '猪'
    },
    {
        'num':'14',
        'bo': 'blue',
        'sx': '狗'
    },
    {
        'num':'15',
        'bo': 'blue',
        'sx': '鸡'
    },
    {
        'num':'16',
        'bo': 'green',
        'sx': '猴'
    },
    {
        'num':'17',
        'bo': 'green',
        'sx': '羊'
    },
    {
        'num':'18',
        'bo': 'red',
        'sx': '马'
    },
    {
        'num':'19',
        'bo': 'red',
        'sx': '蛇'
    },
    {
        'num':'20',
        'bo': 'blue',
        'sx': '龙'
    },
    {
        'num':'21',
        'bo': 'green',
        'sx': '兔'
    },
    {
        'num':'22',
        'bo': 'green',
        'sx': '虎'
    },
    {
        'num':'23',
        'bo': 'red',
        'sx': '牛'
    },
    {
        'num':'24',
        'bo': 'red',
        'sx': '鼠'
    },
    {
        'num':'25',
        'bo': 'blue',
        'sx': '猪'
    },
    {
        'num':'26',
        'bo': 'blue',
        'sx': '狗'
    },
    {
        'num':'27',
        'bo': 'green',
        'sx': '鸡'
    },
    {
        'num':'28',
        'bo': 'green',
        'sx': '猴'
    },
    {
        'num':'29',
        'bo': 'red',
        'sx': '羊'
    },
    {
        'num':'30',
        'bo': 'red',
        'sx': '马'
    },
    {
        'num':'31',
        'bo': 'blue',
        'sx': '蛇'
    },
    {
        'num':'32',
        'bo': 'green',
        'sx': '龙'
    },
    {
        'num':'33',
        'bo': 'green',
        'sx': '兔'
    },
    {
        'num':'34',
        'bo': 'red',
        'sx': '虎'
    },
    {
        'num':'35',
        'bo': 'red',
        'sx': '牛'
    },
    {
        'num':'36',
        'bo': 'blue',
        'sx': '鼠'
    },
    {
        'num':'37',
        'bo': 'blue',
        'sx': '猪'
    },
    {
        'num':'38',
        'bo': 'green',
        'sx': '狗'
    },
    {
        'num':'39',
        'bo': 'green',
        'sx': '鸡'
    },
    {
        'num':'40',
        'bo': 'red',
        'sx': '猴'
    },
    {
        'num':'41',
        'bo': 'blue',
        'sx': '羊'
    },
    {
        'num':'42',
        'bo': 'blue',
        'sx': '马'
    },
    {
        'num':'43',
        'bo': 'green',
        'sx': '蛇'
    },
    {
        'num':'44',
        'bo': 'green',
        'sx': '龙'
    },
    {
        'num':'45',
        'bo': 'red',
        'sx': '兔'
    },
    {
        'num':'46',
        'bo': 'red',
        'sx': '虎'
    },
    {
        'num':'47',
        'bo': 'blue',
        'sx': '牛'
    },
    {
        'num':'48',
        'bo': 'blue',
        'sx': '鼠'
    },
    {
        'num':'49',
        'bo': 'green',
        'sx': '猪'
    },
   ]


}




export class Date extends React.Component{



// timestamp时间戳  formater时间格式

 static formatDate(timestamp, formater) {
    let date = new Date();
    //date.setTime(timestamp);//setTime(parseInt(timestamp));
    formater = (formater != null)? formater : 'yyyy-MM-dd hh:mm';
    Date.prototype.Format = function (fmt) {
        var o = {
            "M+": this.getMonth() + 1, //月
            "d+": this.getDate(), //日
            "h+": this.getHours(), //小时
            "m+": this.getMinutes(), //分
            "s+": this.getSeconds(), //秒
            "q+": Math.floor((this.getMonth() + 3) / 3), //季度
            "S": this.getMilliseconds() //毫秒
        };

        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
        for (var k in o) {
            if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ?
                (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
        }
        return fmt;
    }
    return date.Format(formater);
 }


}



export class NoDataView extends React.Component{

    constructor(props) {
        super(props);
    }

    render(){
        let {text,click,noNet,isloading,height} = this.props;
        let imagestr=require('../res/images/image_nodata.png');
        if(noNet){
            imagestr=require('../res/images/image_nowifi.png');
        }
        var loadView =  null;


        if(isloading){
            // loadView = <View><Text>{text}</Text><ActivityIndicator /></View>;
            loadView = <View style={{flex:1,
                backgroundColor:"#ffffff",
                justifyContent:'center',
                height:height}}><ActivityIndicator style={{marginTop:15,width:20,height:20}} /></View>;
        }else{
            loadView = <TouchableOpacity onPress={click} style={{flex:1,
                backgroundColor:"#ffffff",
                justifyContent:'center',
                height:height}}>

            {/*<Image style={styles.image} source={imagestr}></Image>*/}

            <Text style={styles.text}>{text}</Text>
        </TouchableOpacity>;
        }
        return (
            <View style={{  flex: 1,
                justifyContent: 'center',
                alignItems: 'center',backgroundColor:sys.whiteColor}}>{loadView}</View>
        );

    }
}

const styles = StyleSheet.create({

  
    image:{
        marginTop:-64,
        alignSelf:'center',
        width:100,
        height:100,
        resizeMode:'center'
    },
    text:{
        width:sys.dwidth,
        height:30,
        marginTop:10,
        textAlign:'center',
        justifyContent: 'center',
        textAlignVertical:'center',
        ...Platform.select({
            ios: { lineHeight: 30},
            android: {}
        })
    }
})
