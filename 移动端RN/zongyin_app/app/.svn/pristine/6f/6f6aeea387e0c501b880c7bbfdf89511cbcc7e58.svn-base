//
//  Created by Liu Jinyong on 17/4/5.
//  Copyright © 2016年 Liu Jinyong. All rights reserved.
//
//  @flow
//  Github:
//  https://github.com/huanxsd/react-native-refresh-list-view

import React, {Component} from 'react'
import {View, StyleSheet,Text, DeviceEventEmitter,Platform,Alert,
    TouchableOpacity,Image,PixelRatio
    ,ScrollView,NativeModules,AppState} from 'react-native'
import RefreshListView, {RefreshState} from 'react-native-refresh-list-view'
import Cell from './Cell'

import HomeCell from './HomeCell'

import {NoDataView, sys,TitleHeadView, isIphoneX} from "../common/Data"
const host = sys.host;
import HttpUtils from "../common/HttpUtil"
import codePush from "react-native-code-push";
const { StatusBarManager } = NativeModules;

import FcusImage from "../hot/HeadView"

import LunBoImage from "./LunBoImage"




import Toast,{DURATION} from 'react-native-easy-toast';//导入弹出框组件

// import ToastView from '../common/Toast'

var gonggaoIndext=0;

var myThis;

var clickLastTime=0;

var gonggaoTime=0;

class Home extends Component {

    
    static  navigationOptions = ({navigation}) => {
        const { params } = navigation.state;

        return {
            headerTitle: '购彩',
            headerTitleStyle:{
                alignSelf:'center',
                flex: 1,
                textAlign: 'center',   
            },
            headerRight: <View />

        }
    };
 


    constructor(props) {
        super(props)

        this.state = {
            islogin:0,
            dataList: [],
            refreshState: RefreshState.HeaderRefreshing,
            currentPage:1,
            pageSize:10,
            noNetwork:false,
            noData:false,

          //  headViewIndext:0,

            imageDataSource: [],
            imageDataList:[],

            gonggaoDataSource:[],

            caipiaoTypeList:[],

           isCode:true,

           isloading:false,

        }
    }


    timingTaskStart(){//定时任务
       
        //倒计时
        this.countDownTask=setInterval(
            () => {


                if (gonggaoTime<100) {
                    gonggaoTime++

                    if (gonggaoTime%2) {
                        
                        
                        if (gonggaoIndext<this.state.gonggaoDataSource.length-1) {
                            gonggaoIndext++;
                        } else {
                            gonggaoIndext=0;
                        }
                        
                        


                    }

                } else {
                    gonggaoTime=1;
                }

                // for(var i=0;i<this.state.dataList.length;i++) {

                //     info = this.state.dataList[i];

                //     if (info.hasOwnProperty('remainTime')) {

                //         var remainigTime = info['remainTime']

                //         // if (remainigTime<0) {
                //         //     remainigTime = -remainigTime;
                //         // }

                //         if(remainigTime>0){
                //             info['remainTime']=remainigTime-1; 
                //             // if(remainigTime==0){

                //             //     this.getCaiPiaoTime(info);
                               
                //             // }else{
                                
                //             // }
                //         } else {
                //             if(remainigTime==0){

                //                 this.getCaiPiaoTime(info);
                               
                //             } 
                //         } 

                //     }

                // }

            
                // this.setState({dataList:this.state.dataList});


                      
            },
            1000
        );
     

    }

    timingTaskEnd(){
        this.countDownTask && clearTimeout(this.countDownTask);
    }

    componentDidMount() {
        //监听状态改变事件
        AppState.addEventListener('change', this.handleAppStateChange);

        this.onHeaderRefresh()

        this.appUpdate()

        this.timingTaskStart();

        this.getImageDataList(false,0)

        this.ggShowDo(false,0)

        //登录成功通知
        DeviceEventEmitter.addListener('ChangeUI',(dic)=>{

            //接收到详情页发送的通知，刷新首页的数据，改变按钮颜色和文字，刷新UI
            if(dic['islogin'] != 0){
                // this.getPersonInfo()
                this.setState({
                    islogin:1
                });
                //存储数据
            }else{

                this.setState({
                    islogin:0
                });
                //存储数据
                storage.save('islogin', "")
            }

        });


        //注册通知
        DeviceEventEmitter.addListener('Login',(dic)=>{
            //接收到详情页发送的通知，刷新首页的数据，改变按钮颜色和文字，刷新UI
            const {navigate} = this.props.navigation;
            this.props.navigation.navigate("Login",dic);
        });
        storage.load(host + '/AppPublic.lotteryHall.do', (dic) => {
            if (dic != "" && dic != null) {
                let dataList =  dic
                this.state.currentPage = 2;
                let state = RefreshState.Idle;
                let nodata = false;
                this.setState({
                    dataList: dataList,
                    refreshState: state,
                    noData:nodata,
                    noNetwork:false,
                })
            }
         })
    }

    componentWillUnmount() {
        //删除状态改变事件监听
        DeviceEventEmitter.removeListener('ChangeUI');
        DeviceEventEmitter.removeListener('Login');
        AppState.removeEventListener('change', this.handleAppStateChange);

        this.timingTaskEnd();
     }



     getImageDataList(isReload,num) {
        let codeurl = host + '/AppChat.getChatAd.do';
        let formData = new FormData();
        // 请求参数 ('key',value)
        HttpUtils.post(codeurl,formData)
            .then(result=>{
                if(result['respCode']==1){
            
                    let imageData = result['data']['adList'];
                    // let newList = imageData.map((data) => {
                    //     return data.pic
                    // })
                    // this.setState({
                    //     imageDataSource:newList,
                    //     imageDataList:imageData
                    // })

                    this.lunBoImage.setState({
                        images:imageData
                    })

                }else{

                }
            }).catch(error=>{
               if(num<=0){
                   this.getImageDataList(isReload,num+1);
               }
            })
    }


    ggShowDo(isReload,num){
        let codeurl = host + '/AppMember.ggshow.do';
        let formData = new FormData();
        // 请求参数 ('key',value)
        HttpUtils.post(codeurl,formData)
            .then(result=>{

                if(result['respCode']==1){
        
               
                    this.setState({
                        gonggaoDataSource:result['data']
                    })
                    

                    // let imageData = result['data']['adList'];
                    // let newList = imageData.map((data) => {
                    //     return data.pic
                    // })
                    // this.setState({
                    //     imageDataSource:newList,
                    //     imageDataList:imageData
                    // })


                }else{

                }
            }).catch(error=>{
               if(num<=0){
                   this.getImageDataList(isReload,num+1);
               }
            })
    }



     //状态改变响应
    handleAppStateChange(appState) {
        console.log(">>>>>>>>>>>>"+appState);
    }
   

    appUpdate(){
        codePush.sync({
            updateDialog: {
                appendReleaseDescription: true,
                descriptionPrefix:'\n\n有新版本：\n',
                title:'更新',
                mandatoryUpdateMessage:'',
                mandatoryContinueButtonLabel:'更新',
            },
            mandatoryInstallMode:codePush.InstallMode.IMMEDIATE,
        });
    }



    onHeaderRefresh = () => {
        this.state.currentPage = 1;
        this.setState(
            {
                refreshState: RefreshState.HeaderRefreshing,
            })
            //获取测试数据
        // if(this.state.refreshState == RefreshState.Idle){
            this.getDataList(true)
        // }

    }

    onFooterRefresh = () => {

        this.setState({
            refreshState: RefreshState.FooterRefreshing,
        })
        //
        // if(this.state.refreshState == RefreshState.Idle){
            this.getDataList(false)
        // }

    }


    getDataList(isReload) {



        this.setState({
            noNetwork:false,
            isloading:true
        })
        let codeurl = host + '/AppPublic.lotteryHallNew.do';
        let formData = new FormData();
        HttpUtils.post(codeurl,formData)
            .then(result=>{



                // console.log('00000')
                // console.log(result)

                if(result['respCode']==1){


                    var titArr = [{titel:'全部',typeid:''}]
                    let categoryArr = result['data']['category'];

                    let newCategoryArr = [...titArr,...categoryArr]

                  //  console.log(newCategoryArr)

                    let testData = result['data']['list'];
                    let newList = testData.map((data) => {
                        return {
                            id: data.id?data.id:1,
                            typeid: data.typeid,
                            title: data.title,
                            ftitle: data.ftitle,
                            pic:data.pic,
                            name:data.name
                        }
                    });
                    storage.save(codeurl, newList)

                    let dataList =  isReload ? newList : [...this.state.dataList, ...newList]
                    this.state.currentPage = parseInt(dataList.length/this.state.pageSize)+2;
                    let state = dataList.length >= result['data']['total'] ? RefreshState.NoMoreData : RefreshState.Idle;
                    let nodata = false;
                    if(isReload){
                        state = RefreshState.Idle;

                        if(testData.length == 0){
                            nodata=true;
                        }
                    }

                    this.setState({
                        caipiaoTypeList:newCategoryArr,
                        dataList: dataList,
                        refreshState: state,
                        noData:nodata,
                        noNetwork:false,
                        isloading:false
                    })

                    // this.getRemainigTime()
                }else{
                     this.setState({
                        refreshState: RefreshState.Idle,
                         noNetwork:false,
                         isloading:false
                    })
                }

            })

            .catch(error=>{
    
                storage.load(codeurl, (dic) => {
         
                    if (dic != "" && dic != null) {
                        let dataList =  dic
                        this.state.currentPage = 2;
                        let state = RefreshState.Idle;
                        let nodata = false;
                        if(isReload){
                            state = RefreshState.Idle;
                        }
                        this.setState({
                            dataList: dataList,
                            refreshState: state,
                            noData:nodata,
                            noNetwork:false,
                            isloading:false
                        })
                    }else{
                        this.setState({
                            noNetwork:true,
                            isloading:false
                        })
                    }
                 })

            })
    }




   //获取开奖的剩余时间
//    getRemainigTime(){


//     var size=this.state.dataList.length;
//         for(var i=0;i<size;i++){
//             var info = this.state.dataList[i]
//            // this.getCaiPiaoTime(info['name'],info['typeid']); 
//             this.getCaiPiaoTime(info)
//         }    
//     }



   // getCaiPiaoTime(name,typeid){
    // getCaiPiaoTime(info){

    //     console.log('-----------')
    //     console.log(info['name'],info['typeid'])
       

    //     let codeurl = sys.host + "/AppApijiekou.lotterytimes";
    //     let formData = new FormData();
    //     formData.append('lotteryname',info['name']);
    //     formData.append('cptype',info['typeid']);
        
    //     HttpUtils.post(codeurl,formData)
    //         .then(result=>{
    //             if(result['respCode']==1){
            
    //                 var size= this.state.dataList.length;


    //             info['curExpect'] = result['data']['currFullExpect'];
    //             info['lastFullExpect'] = result['data']['lastFullExpect'];
    //             info['remainTime'] = result['data']['remainTime'];

                   

    //             }
    //         }).catch(error=>{
    //         })
    // }



    keyExtractor = (item, index) => {
        return index.toString()
    }

    renderCell = (info) => {


        // if (info.item == '更多彩种') {
        //     return <TouchableOpacity activeOpacity={1}  onPress={this.props.onPress}>
        //     <View style={{backgroundColor:'red'

        //      }}>;

        //         <Text>更多彩种</Text>

        //      </View>
        //      </TouchableOpacity>
        // }


        
        if (myThis.state.dataList.length) {
            return <HomeCell info={info.item}  onPress={this.itemClick.bind(this, info)}/>
        } else {
            return null;
        }

         
    }

    // renderAllCell = (info) => {
    //     return <Cell type='all' index={info.index} info={info.item} onPress={this.itemClick.bind(this, info)}/>
    // }


    itemClick(e){

        var nowTime= (new Date()).getTime();
        if(Math.abs(nowTime-clickLastTime)<sys.clickIntervalTime){
            //小于0.5秒
            return false;
        }
        clickLastTime=nowTime;

        // if(this.state.islogin != 1){
        //     DeviceEventEmitter.emit('Login', {}); 
        // }else{
            const {navigate} = this.props.navigation;

            // console.log('更多.typeid')

            switch(e.item.typeid){
                
                case 'ssc':
                    navigate('Cqssc',{item:e.item})
                    break;
                case 'k3':
                    navigate('KuaiThreeAction',{item:e.item})
                    break;

                case 'pk10':

                    navigate('Pkten',{item:e.item});
                    break;

                case 'lhc':
                    navigate('Sixhc',{item:e.item});
                    break;

                case 'keno':
                    navigate('Keno',{item:e.item});
                    break;
                case 'dpc':
                    navigate('Dpc',{item:e.item});
                    break;

                case 'x5':
                    navigate('ElevenSelectFive',{item:e.item});
                    break;

                case 'pcdd':                  
                    navigate('PcDanDan',{item:e.item});

                default: //更多
                    
                    //  console.log('更多')

                     navigate('CaipiaoMore',{caipiaoTypeList:myThis.state.caipiaoTypeList,
                        dataList:myThis.state.dataList})
                    break;

            }
        // }



    }

    xuanzheClick(indext) {
        //console.log(indext);


        if (indext==0) { //充值


            if(global.user.loginState != 1) {
                DeviceEventEmitter.emit('Login', {});
                return false;
            }

            const {navigate} = this.props.navigation;
            this.props.navigation.navigate("BuycoinsCent",{fubi:0});
        } 

        if (indext==1) { //聊天室
            var item={
                id: 1,
                typeid: null,
                title: "聊天室",
                ftitle: "聊天室",
                pic:'',
                name:'聊天室'
            };
            item['userInfo']=null;
            item['token']="";
            this.props.navigation.navigate("Chat",{item:item});
        }

        if (indext==2) { //在线客服
            DeviceEventEmitter.emit('Read', {});
                var item={
                    id: 1,
                    typeid: null,
                    title: "客服",
                    ftitle: "客服",
                    pic:'',
                    name:'客服'
                };
                item['userInfo']=null;
                item['token']="";
                this.props.navigation.navigate("Chat",{item:item});
        }
 
    }

    renderHeadView = (info) => {
        let hedImageView = <View style={styles.headView}>

        {/* <FcusImage/> */}
                <LunBoImage isNeedRun={false}
                onPress={this.clickImgView.bind()}
                 ref={(LunBoImage) => {this.lunBoImage = LunBoImage;}}
                />
            </View>

        var ggStr = '暂无公告'   
                
        if (this.state.gonggaoDataSource.length) {
        ggStr = this.state.gonggaoDataSource[gonggaoIndext]['title']
        }
            
        let gonggaoView = <View style={{height:30,width:sys.dwidth,backgroundColor:sys.whiteColor,marginTop:0}}>
        <Text style={{color:sys.mainColor,textAlign:'left',
        textAlignVertical:'center',marginLeft:10,
        height:30,...Platform.select({
            ios: { lineHeight: 30},
                android: {}
        })}}>公告:<Text style={{color:sys.titleColor}}>{ggStr}</Text></Text>
        </View>

        let titArr = ['充值','聊天室','在线客服']
        let xuanzheView = <View style={{flexDirection:'row',marginTop:0,marginLeft:0,
        width:sys.dwidth}}>

            {titArr.map((info, index) => {

                let requireStr = require('./images/chongzhi.png')
                if (index==1) {
                    requireStr = require('./images/liao.png')
                } else if (index == 2) {
                    requireStr = require('./images/kefu.png')
                }
                 
                 return <TouchableOpacity activeOpacity={1}  onPress={this.xuanzheClick.bind(this, index)}>
          
                 <View style={[{marginLeft:0,height:55+25,width:sys.dwidth/3}]}>
                     <Image
                     source={requireStr}
                     style={[{marginLeft:(sys.dwidth/3 - 40)/2,marginTop:5,width:40,height:40}]}
                     />
    
                     {/* <View style={[styles.title,{marginLeft:0,width:sys.dwidth/3,height:50}]}> */}
    
                    <Text style={{marginTop:5,fontSize:13,
                    color:sys.heiColor,textAlign:'center'}} numberOfLines={1}>{info}</Text>
                         {/* <Text style={{marginTop:3,fontSize: 13,color: '#999999',textAlign:'center'}} 
                         numberOfLines={1}>{info.ftitle}</Text> */}
                     {/* </View> */}
                 </View>
             </TouchableOpacity>
            })
            }


        </View>


        
        let titView = <View style={{height:30,width:sys.dwidth,backgroundColor:sys.whiteColor,marginTop:0}}>
        <Text style={{color:sys.mainColor,textAlign:'left',
        textAlignVertical:'center',marginLeft:10,
        height:30,...Platform.select({
            ios: { lineHeight: 30},
                android: {}
        })}}>热门彩种</Text>
        </View>

         
         return <View>

             {hedImageView}
             {gonggaoView}
             <View style={{height:1,backgroundColor:sys.backgroundColor}}></View>
             {xuanzheView}
             <View style={{height:10,backgroundColor:sys.backgroundColor}}></View>
             {titView}
             <View style={{height:1,backgroundColor:sys.backgroundColor}}></View>

         </View>

      
    }

    renderFooterView(){
        return null;
    }


    clickImgView(url) {
      
        const {navigate} = myThis.props.navigation;
        navigate('WebViewScene', {uri: {content:url}});

    }

    render() {


        myThis = this;
        // <Image style={[styles.image]} source={require('../res/images/logo.png')}></Image>

        // let headChangView = <ScrollView 
        // ref={'headChangViewScrollView'}
        // showsHorizontalScrollIndicator = {false}
        // horizontal={true}
        //  contentContainerStyle = {{flexDirection:'row',height:40,marginTop:0}} 
        // style={{
        //      backgroundColor:sys.silveryColor,
        //     width:sys.dwidth,
        //     // marginTop:0,
        //    //  height:sys.dwidth/4 + 30+10,
        //    // flexDirection:'row',
        // }}>

        //     {this.state.caipiaoTypeList.map((infomm, indexmm) => {

        //     //     console.log(index)
        //     //    console.log(info.tp)

        //         return (
        //             <TouchableOpacity key={indexmm} onPress={this.headViewClick.bind(this, infomm,indexmm)}  activeOpacity={1}>
        //             <View style={{width:sys.dwidth/6,
        //             //    marginLeft:indexmm==0?0:1,
        //                height:40,
        //                marginTop:0,
        //                backgroundColor:sys.whiteColor}}>
                    
        //                 <Text style={{color:this.state.headViewIndext==indexmm?sys.mainColor:sys.headerColor,textAlign:'center',textAlignVertical:'center',
        //                  width:sys.dwidth/6,height:40,fontSize:14,...Platform.select({ ios: { lineHeight: 40},
        //                 android: {} })}} numberOfLines={1}>{infomm.titel}</Text>

        //                 {/* <View style={{marginLeft:10,width:(sys.dwidth)/4-20,height:2,
        //                     backgroundColor:this.state.headViewIndext==index?sys.mainColor:sys.whiteColor}}></View> */}

        //             </View>
        //             </TouchableOpacity>
        //         );
        //     })}


        // </ScrollView>


         let gendoudic = {curExpect:'',ftitle:"更多好玩游戏",id:"",
            lastFullExpect:"",name:"",pic:"",
            remainTime:632,title:"更多彩种",typeid:""}




            var newList = [];  
            
            if (this.state.dataList.length) {
                if (this.state.dataList.length<15) {

                    var size = this.state.dataList.length;
                    if (size%2 ==0) {
                        size = size-1;
                    }

                    for(var i=0;i<size;i++) {
                        var caipiao = this.state.dataList[i]
                        newList.push(caipiao)
                    }
    
                    newList.push(gendoudic)
    
                } else {
                    for(var i=0;i<15;i++) {
                        var caipiao = this.state.dataList[i]
                        newList.push(caipiao)
                    }
    
                    newList.push(gendoudic)
                }
            } else {
                newList.push(gendoudic)
            }

            

            // if (!newList.length) {
            //     newList:['111']
            // }
            
            // for(var i=0;i<this.state.dataList.length;i++) {
            //     var caipiao = this.state.dataList[i]


            //     var headModel = this.state.caipiaoTypeList[this.state.headViewIndext]


            //      if (this.state.headViewIndext ==0) {

            //      //   caipiao.item['type'] = 'all'
                
            //         newList.push(caipiao)

            //     } else {
            //         if (caipiao.typeid == headModel.typeid) {
            //          newList.push(caipiao)
            //         }
                
            //      } 
            // }


            let contentView = (this.state.noNetwork || this.state.noData)?<NoDataView height={sys.dheight}
            click={()=>this.chongXingRoad()}
                                isloading={this.state.isloading}
                                text = {this.state.isloading?"加载中":"暂无内容,点击重新加载"}
                            />:<RefreshListView
                    style={{width:sys.dwidth}}
                    data={newList}
                    keyExtractor={this.keyExtractor}
                    renderItem={this.renderCell}
                    refreshState={this.state.refreshState}
                    onHeaderRefresh={this.onHeaderRefresh}
                    //onFooterRefresh={this.onFooterRefresh}
                    numColumns ={2}
                     ListHeaderComponent={this.renderHeadView}
                    ListFooterComponent={this.renderFooterView}
                    // horizontal={false}
                    ItemSeparatorComponent={this._separator}
                    // 可选
                    footerRefreshingText= '玩命加载中 >.<'
                    footerFailureText = '我擦嘞，居然失败了 =.=!'
                    footerNoMoreDataText= '-我是有底线的-'
                />


        
//         let contentView = <ScrollView
//         // onMomentumScrollEnd={(event) => {}}
//         ref={'contentViewScrollView'}
//         pagingEnabled = {true}
//         // horizontal={true}
//         style={{
//             width:sys.dwidth,
//             height:sys.dheight-sys.dwidth,
//         }}>
//         >
//         {this.state.caipiaoTypeList.map((info,index)=>{

// // {titel:'全部',typeid:''},  
//             var newList = [];
//             for(var i=0;i<this.state.dataList.length;i++) {
//                 var caipiao = this.state.dataList[i] 
                
//                 if (index ==0) {

//                     //   caipiao.item['type'] = 'all'
                   
//                        newList.push(caipiao)
   
//                    } else {
//                        if (caipiao.typeid == info.typeid) {
//                         newList.push(caipiao)
//                        }
                   
//                     } 
                
//             }
          
//             return (this.state.noNetwork || this.state.noData)?<NoDataView height={sys.dheight-sys.dwidth}
//             key={i +this.state.caipiaoTypeList[index].titel} click={()=>this.chongXingRoad()}
//                                 isloading={!this.state.noNetwork}
//                                 text = {this.state.noNetwork?"暂无网络，点击重新加载":"暂无内容,点击重新加载"}
//                             />:<RefreshListView
//                     key={i +this.state.caipiaoTypeList[index].titel}
//                     style={{width:sys.dwidth}}
//                     data={newList}
//                     keyExtractor={this.keyExtractor}
//                     renderItem={index===0?this.renderAllCell:this.renderCell}
//                     refreshState={this.state.refreshState}
//                     onHeaderRefresh={this.onHeaderRefresh}
//                     //onFooterRefresh={this.onFooterRefresh}
//                     numColumns ={index==0?3:1}
//                     // ListHeaderComponent={this.renderHeadView}
//                     ListFooterComponent={this.renderFooterView}
//                     // horizontal={false}
//                     ItemSeparatorComponent={this._separator}
//                     // 可选
//                     footerRefreshingText= '玩命加载中 >.<'
//                     footerFailureText = '我擦嘞，居然失败了 =.=!'
//                     footerNoMoreDataText= '-我是有底线的-'
//                 />


//         })}

           

//         </ScrollView>

   
           
         



        return(

             <View>
              {/* <View style={{width:sys.dwidth,height:2,backgroundColor:sys.silveryColor}}></View> */}
              {/* {hedImageView}  
              {headChangView}
               {gonggaoView} 
               <View style={{height:1,width:sys.dwidth,backgroundColor:sys.silveryColor}}/>        */}
              {contentView}
           
              <Toast  //提示
                    ref="toast"
                    style={{backgroundColor:'gray'}}
                    position='center'
                    positionValue={200}
                    opacity={0.6}
                    textStyle={{color:'white'}}
                />  
            </View>


    //         <View>
    //         <Image source={require('./images/image_xiuxing_color.png')} style={{flex:1,
    // alignItems:'center',
    // justifyContent:'center',
    // width:100,
    // height:100,
    // //不加这句，就是按照屏幕高度自适应
    // //加上这几，就是按照屏幕自适应
    // //resizeMode:Image.resizeMode.contain,
    // //祛除内部元素的白色背景
    // backgroundColor:'rgba(0,0,0,0)',}} />
    //          <View>
    //           {headChangView}
    //           <View style={{width:sys.dwidth,height:2,backgroundColor:sys.silveryColor}}></View>
    //           {contentView}
    //           </View>
    //           </View>
            // (this.state.noNetwork || this.state.noData)?<NoDataView click={()=>this.getDataList(true)}
            //         noNet = {this.state.noNetwork}
            //         text = {this.state.noNetwork?"暂无网络，点击可重新加载":"暂无内容"}
            //     />:
            // <View style={styles.container}>

            //     <RefreshListView
            //         data={this.state.dataList}
            //         keyExtractor={this.keyExtractor}
            //         renderItem={this.renderCell}
            //         refreshState={this.state.refreshState}
            //         onHeaderRefresh={this.onHeaderRefresh}
            //         //onFooterRefresh={this.onFooterRefresh}
            //         numColumns ={4}
            //         ListHeaderComponent={this.renderHeadView}
            //         ListFooterComponent={this.renderFooterView}
            //         // horizontal={false}
            //         ItemSeparatorComponent={this._separator}
            //         // 可选
            //         footerRefreshingText= '玩命加载中 >.<'
            //         footerFailureText = '我擦嘞，居然失败了 =.=!'
            //         footerNoMoreDataText= '-我是有底线的-'
            //     />

            // </View>

            
        )
    }

  

    chongXingRoad() {

        if (!this.lunBoImage.state.images.length) {
            this.getImageDataList(false,0)
        }

        if (!this.state.gonggaoDataSource.length) {
            this.ggShowDo(false,0)
        }

        this.getDataList(true)
    }

}

const styles = StyleSheet.create({
    container: {
        flex: 1,
         marginTop: Platform.OS == 'ios' ? 0 : 0,
        backgroundColor:sys.whiteColor
        
    },
    headView:{
        width:sys.dwidth,
        height:sys.dwidth/3
     },
     
     front_cover: {

        marginLeft:10,
        marginTop:10,
        width: sys.dwidth/4 - 20,
        height: sys.dwidth/4 - 20,
        borderRadius:0,
        // borderWidth:2,
        // borderColor:'white',
        alignItems:'center',

        // backgroundColor:sys.yellowColor

    },

    
})

export default Home






