/**
 * Created by Native on 2019/2/17.
 */


import React, {Component} from 'react'
import {
    StyleSheet,
    Text,
    View,
    Dimensions,
    ScrollView, SafeAreaView,
    Button,
    TextInput,
    Alert,
    TouchableOpacity, Picker, Platform, DeviceEventEmitter
} from 'react-native';

import ScrollableTabView, {DefaultTabBar, } from 'react-native-scrollable-tab-view';

import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'
import Toast,{DURATION} from 'react-native-easy-toast';//导入弹出框组件
import {sys,NoDataView,isIphoneX} from "../../common/Data"

const host = sys.host;
const RIGHT_WIDTH = Dimensions.get('window').width*0.75;
const LEFT_WIDTH = Dimensions.get('window').width*0.25;

const SCREEN_WIDTH = Dimensions.get('window').width;

import LeftPlayView from '../LeftPlayView';

var myThis;




//六合彩半波
const lhc_tmbb_content = [
    {tit:'虎',pl:'11.63',numArr:['10','22','34','46']},
    {tit:'兔',pl:'11.63',numArr:['9','21','33','45']},
    {tit:'龙',pl:'11.63',numArr:['8','20','32','44']},
    {tit:'蛇',pl:'11.63',numArr:['7','19','31','43']},
    {tit:'马',pl:'11.63',numArr:['6','18','30','42']},
    {tit:'羊',pl:'11.63',numArr:['5','17','29','41']},
    {tit:'猴',pl:'11.63',numArr:['4','16','28','40']},
    {tit:'鸡',pl:'11.63',numArr:['3','15','27','39']},
    {tit:'狗',pl:'11.63',numArr:['2','14','26','38']},
    {tit:'猪',pl:'9.31',numArr:['1','13','25','37','49']},
    {tit:'鼠',pl:'11.63',numArr:['12','24','36','48',]},
    {tit:'牛',pl:'11.63',numArr:['11','23','35','47']},
   
    ]



export default class SixhcShengXiao extends React.Component {



    constructor(props) {
        super(props);


        this.state = {
            playList:['特肖','一肖','二肖连','三肖连','四肖连'],
            leftbtnSeletIndex:0,
            //twoMianList:['大','小','单','双','大单','大双','小单','小双','合大','合小','合单','合双','尾大','尾小','红波','绿波','蓝波'],
            nowcpinfo:{},
            lhcRates:{},
            zhushuNum:0,
            beishu:'1',


            wanFaStr:'sxtx',
            wanFaArr:['sxtx','sx1x','sx2xl','sx3xl','sx4xl'],

            twoMianPl:['hu','tu','long','she',
            'ma','yang','hou','ji','gou','zhu','shu','niu'],

            xiazhiArr:[],
            twoMianXiaZhuPl:[],
        }
    }


    render(){

        myThis = this;
      
        let changeKj = null;

        

        // var scrollH = sys.dheight-310;
        // if(isIphoneX()){
        //     scrollH = sys.dheight-340;

        // }

        var scrollH = sys.zhongjianIsHaveChange;

        var remark = ''
        var rate = ''

        if (this.state.leftbtnSeletIndex ==0) {

            if (this.state.lhcRates.hasOwnProperty('sxtxshu')) {

                remark = this.state.lhcRates['sxtxshu']['remark'];
                rate = this.state.lhcRates['sxtxshu']['rate'];
            }
        } else if (this.state.leftbtnSeletIndex ==1) {
            if (this.state.lhcRates.hasOwnProperty('sx1xshu')) {
                remark = this.state.lhcRates['sx1xshu']['remark'];
                rate = this.state.lhcRates['sx1xshu']['rate'];
            }
        } else if (this.state.leftbtnSeletIndex ==2) {
            if (this.state.lhcRates.hasOwnProperty('sx2xl')) {
                remark = this.state.lhcRates['sx2xl']['remark'];
                rate = this.state.lhcRates['sx2xl']['rate'];
            }
        } else if (this.state.leftbtnSeletIndex ==3) {
            if (this.state.lhcRates.hasOwnProperty('sx3xl')) {
                remark = this.state.lhcRates['sx3xl']['remark'];
                rate = this.state.lhcRates['sx3xl']['rate'];
            }
        } else if (this.state.leftbtnSeletIndex ==4) {
            if (this.state.lhcRates.hasOwnProperty('sx4xl')) {
                remark = this.state.lhcRates['sx4xl']['remark'];
                rate = this.state.lhcRates['sx4xl']['rate'];
            }
        }

        // if (this.state.leftbtnSeletIndex ==0 || this.state.leftbtnSeletIndex ==1 || this.state.leftbtnSeletIndex ==3 || 
        //     this.state.leftbtnSeletIndex ==5 || this.state.leftbtnSeletIndex ==7 || this.state.leftbtnSeletIndex ==9
        //     ||this.state.leftbtnSeletIndex ==11) {

        //     changeKj = this.teMaZhiXuan();

        // } else {
            changeKj = this.teMaLiangMian();
        // }

        let isCunZai = this.state.lhcRates.hasOwnProperty('sxtxshu')
        let rarmkView = isCunZai?<Text style={{
            marginLeft: 10, marginTop: 10,width: RIGHT_WIDTH - 20,
          color: sys.titleColor,textAlign: 'left',textAlignVertical: 'center',paddingBottom:10
        }}>{remark+'赔率'}<Text style={{color:sys.mainColor}}>{rate}</Text>{"倍"}<Text style={{color:sys.mainColor}}>
        {rate}</Text>{"倍"}</Text>:<NoDataView 
              isloading = {this.props.visible} click={()=>this.props.lodaData()}
              text = {"重新加载"}></NoDataView>


        rightView = <ScrollView
            style={{
                backgroundColor:"white",
                width:RIGHT_WIDTH,
                height:scrollH
            }}
        >
                    {rarmkView}
                
                    {changeKj}

                    <View style={{height:50}}></View>
               
            </ScrollView>

        return(
            <KeyboardAwareScrollView
                style={styles.container}
                keyboardShouldPersistTaps = {"always"}

            >
        <View>
            <View style={styles.hengcontainer}>
                <LeftPlayView scrollH={scrollH} playList={this.state.playList} playtit="999" leftclickselet={(indext,leftbtnSeletIndex)=>{

                    this.leftClickSelet(indext)

                }}
                />

                {rightView}

            
            </View>


            <View style={styles.beishuView} >

                <TouchableOpacity  style={styles.reduceBtn }
                    onPress={() => {

                        if (this.state.beishu == '' || this.state.beishu == null) {
                            this.setState({
                                beishu : '',
                             
                            })
                            return;
                        }

                        if(this.state.beishu == 1){
                        return;
                        }else {

                        var mewBeishu = parseInt(this.state.beishu) - 1;


                            this.setState({
                                beishu : mewBeishu+'',

                            })

                        }
                    }}
                >
                    <Text style={styles.payButtonText} >-</Text>
                </TouchableOpacity>


                <TextInput underlineColorAndroid='transparent' value={this.state.beishu}
                keyboardType='numeric'  style={styles.beishuCount}  ref="beishucount"
                onChangeText={(text) => this.setState({beishu:text})}
                ></TextInput>

                <TouchableOpacity  style={styles.reduceBtn }
                    onPress={() => {


                    if (this.state.beishu == '' || this.state.beishu == null) {
                        this.setState({
                            beishu : '1',
                            
                        })
                        return;
                    }

                    var mewBeishu = parseInt(this.state.beishu) + 1

                        this.setState({
                            beishu : mewBeishu+'',
                        })
                    }}
                >
                    <Text style={styles.payButtonText}>+</Text>
                </TouchableOpacity>

                </View>


                <View style={styles.footer}>
                <View style={styles.yuerbar}>
                    <Text style={styles.nameHeader}>总额</Text>
                    <Text style={styles.yuer}>{this.state.beishu*2*this.state.zhushuNum + '元'}</Text>
                </View>
                <View style={styles.yuerbar}>
                    <Text style={styles.nameHeader}>单注：</Text>
                    <Text style={styles.yuer}>2元</Text>
                    {/*<FormInput style={styles.yuer} placeholder="111" />*/}
                </View>
                <View style={styles.yuerbar}>
                    <Text style={styles.nameHeader}>共</Text>
                    <Text style={styles.yuer}>{this.state.zhushuNum +'注'}</Text>
                </View>

                <TouchableOpacity  style={styles.payButton }
                    onPress={() => {
                    this.buyClick()
                    }}
                >
                    <Text style={styles.payButtonText}>下注</Text>
                </TouchableOpacity>

            </View>


        </View>

        <Toast  //提示
                    ref="toast"
                    style={{backgroundColor:'gray'}}
                    position='top'
                    positionValue={200}
                    opacity={0.6}
                    textStyle={{color:'white'}}
                />  
        </KeyboardAwareScrollView>
        )



    }


    buyClick(){
        //console.log('下注')

        let isCunZai = this.state.lhcRates.hasOwnProperty('sxtxshu')

       if (!isCunZai) {
        this.props.lodaData()
        return;
       }

        if (!myThis.state.zhushuNum) {
       
            this.refs.toast.show("请选择完整的号码!", DURATION.LENGTH_LONG);  
            return;
        }
        this.props.onPress();
    }

    leftClickSelet(indext){

        if (this.state.leftbtnSeletIndex == indext) {
            return;
        }

        this.cleanJiemian(true,indext)
        
    }

    cleanJiemian(isDqClean,indext) {
        for (var key in myThis.refs) {

            if ((key.indexOf("CustomTwoButton") != -1) ||(key.indexOf("CustomButton") != -1)) {

                myThis.refs[key].setState({
                    selected: false
                });
            }
        }


        if (isDqClean) {
            this.setState({
                leftbtnSeletIndex:indext,
                 xiazhiArr:[],
                 twoMianXiaZhuPl:[],
                 zhushuNum:0,
                 wanFaStr:this.state.wanFaArr[indext],
            })
        } else {
            this.setState({
                 xiazhiArr:[],
                 twoMianXiaZhuPl:[],
                 zhushuNum:0,     
            })
        }

        
    }



    teMaZhiXuan(){
           return<View style={{// 主轴方向
                flexDirection:'row',
                //  justifyContent: 'space-between',
                // 一行显示不下,换一行
                flexWrap:'wrap',
                // 侧轴方向
                width:RIGHT_WIDTH,
                alignItems:'center',}
                }>

                {sys.lhc_numData.map((info, index) => {
                    return (

                        <CustomButton style={{height:100,width:50,backgroundColor:'red'}} key={index} info={info}  onPress={this.itemClick.bind(this, info)}/>

                    );
                })}




            </View>
    }

    teMaLiangMian(){


        return<View style={{// 主轴方向
            flexDirection:'row',
            //  justifyContent: 'space-between',
            // 一行显示不下,换一行
            flexWrap:'wrap',
            // 侧轴方向
            width:RIGHT_WIDTH,
            alignItems:'center',}
            }>

            {lhc_tmbb_content.map((info, index) => {
                return (

                    <CustomTwoButton ref={'CustomTwoButton'+index} style={{height:100,width:50,backgroundColor:'red'}} key={index} info={info} indext={index}  onPress={this.itemTwoClick.bind(this,index,info)}/>

                );
            })}




        </View>

    }


    countFun() {


        myThis.state.xiazhiArr = [];
        myThis.state.twoMianXiaZhuPl = [];
        var index = 0
        for (var key in myThis.refs) {

            if ((key.indexOf("CustomTwoButton") != -1)) {

                if(myThis.refs[key].state.selected != null&&myThis.refs[key].state.selected){
                    var plkey = myThis.state.wanFaStr+myThis.state.twoMianPl[index]
                    var numStr = lhc_tmbb_content[index]['tit'];
                    myThis.state.xiazhiArr.push(numStr)
                    myThis.state.twoMianXiaZhuPl.push(plkey)

                    //console.log(myThis.state.twoMianXiaZhuPl)
                }

                // console.log(key)

                //     console.log(index)

                index++;
            }
        }
        
        

    }

    itemTwoClick(index,info) {
        // var plkey = myThis.state.wanFaStr+myThis.state.twoMianPl[index]

        // var numStr = info;

        // if (myThis.state.xiazhiArr.indexOf(numStr) == -1) {
        //     myThis.state.xiazhiArr.push(numStr)

        //     myThis.state.twoMianXiaZhuPl.push(plkey)
        // } else {
        //     myThis.state.xiazhiArr.splice(myThis.state.xiazhiArr.indexOf(numStr, 1))
        //     myThis.state.twoMianXiaZhuPl.splice(myThis.state.xiazhiArr.indexOf(numStr, 1))

        // }

        myThis.countFun();

        var zhushuNum=0;
        if(myThis.state.leftbtnSeletIndex ==0 || myThis.state.leftbtnSeletIndex ==1) {
            zhushuNum = myThis.state.xiazhiArr.length;
        } else if (myThis.state.leftbtnSeletIndex ==2 || myThis.state.leftbtnSeletIndex ==3 || myThis.state.leftbtnSeletIndex ==4)
        {
            zhushuNum = myThis.combine(myThis.state.xiazhiArr,myThis.state.leftbtnSeletIndex).length
        }

        myThis.setState({
            xiazhiArr:myThis.state.xiazhiArr,
            twoMianXiaZhuPl:myThis.state.twoMianXiaZhuPl,
            zhushuNum:zhushuNum,
        })
    }

    itemClick(info) {

    }

    combine(arr, num) {
        var r = [];
        (function f(t, a, n) {
            if (n == 0) return r.push(t);
            for (var i = 0, l = a.length; i <= l - n; i++) {
                f(t.concat(a[i]), a.slice(i + 1), n - 1);
            }
        })([], arr, num);
        return r;
    }
}






class CustomButton extends Component {

    constructor() {
        super();
        this.state = {

            selected: false,
       
        };
    }




    // 'num':'2',
    // 'bo': 'red',
    // 'sx': '鸡'

    render() {
        var {info} = this.props;


        // tit:'蓝合双',pl:'5.82',numArr:['04','15','20','26','31','37','42','48']

        // console.log(info.tit)
        // console.log(info.pl)
        // console.log(info.numArr)


        // if(xuanzo==1)this.state.selected=true;

         const { selected } = this.state;


        return (

            <TouchableOpacity  style={selected?[styles.stouchButton,{backgroundColor:info.bo}]:styles.touchButton}
                                onPress={() => {

                                    this.setState({ selected: !selected } ,() => {
                                        //这里打印的是最新的state值
                                        this.props.onPress();

                                    })
                                }}>
                                
                <Text style={selected?styles.stouchButtonText:([styles.touchButtonText,{color:info.bo}])}>{info.num}</Text>
            </TouchableOpacity>



        );

      



    }
}

class CustomTwoButton extends Component {

    constructor() {
        super();
        this.state = {

            selected: false,
       
        };
    }



    render() {
        var {indext,info} = this.props;

        var plkey = myThis.state.wanFaStr+myThis.state.twoMianPl[indext]


        var plStr=''

        if (myThis.state.lhcRates.hasOwnProperty(plkey)) {
            plStr = '赔率'+myThis.state.lhcRates[plkey]['rate'];
        }

        // tit:'蓝合双',pl:'5.82',numArr:['04','15','20','26','31','37','42','48']

        // console.log(info.tit)
        // console.log(info.pl)
        // console.log(info.numArr)

        var numStr = ''

        for (var i=0 ;i<info.numArr.length;i++) {
            
            str = info.numArr[i] 
            if (numStr.length) {
                numStr= numStr+','+str;
            }else {
                numStr = str;
            }

        }

        // if(xuanzo==1)this.state.selected=true;
        

         const { selected } = this.state;


        return (



            // <View style={styles.twoButtonView}>

                 <TouchableOpacity  style={selected?styles.twostouchButton:styles.twotouchButton}
                                onPress={() => {

                                    this.setState({ selected: !selected } ,() => {
                                        //这里打印的是最新的state值
                                        this.props.onPress();

                                    })
                                }}>
                                
                    <Text style={selected?styles.stouchButtonText:styles.touchButtonText}>{info.tit}</Text>


                    <Text style={{ fontSize:11,width:(RIGHT_WIDTH-30)/2,color:selected?sys.whiteColor:sys.mainColor,textAlign:'center',
                    textAlignVertical:'center',
                   // height:30,
                    //  ...Platform.select({
                    //   ios: { lineHeight: 20},
                    //   android: {}
                    //  })
                     }}>{plStr}</Text>

                   <Text style={{ fontSize:11,width:(RIGHT_WIDTH-30)/2-20,height:40,marginLeft:10,color:selected?sys.whiteColor:sys.titleColor,textAlign:'center',
                    textAlignVertical:'center',
                     ...Platform.select({
                      ios: { lineHeight: 40},
                      android: {}
                     })}}>{numStr}</Text>
                   






                </TouchableOpacity>
               
                //  <Text style={styles.peilvText}>1.9</Text>
            

            // </View>

        );

      



    }
}

const styles = StyleSheet.create({


    hengcontainer:{
        flexDirection:'row',
        marginTop: Platform.OS == 'ios' ? 0 : 0,
        backgroundColor:'white'
    },

    stouchButton:{
        height: 30,
        width: 30,

        borderRadius:15,
        backgroundColor: sys.mainColor,

        

        justifyContent: 'center',
        overflow: 'hidden',
      //  margin:(RIGHT_WIDTH - 150)/6,
        marginLeft:(RIGHT_WIDTH - 150)/6,
        marginTop:(RIGHT_WIDTH - 150)/6,
    },

    touchButton: {
        height: 30,
        width: 30,

        borderRadius:15,
        borderWidth:1,
        borderColor:sys.grayColor,
        backgroundColor: "white",
        justifyContent: 'center',
        overflow: 'hidden',
        marginLeft:(RIGHT_WIDTH - 150)/6,
        marginTop:(RIGHT_WIDTH - 150)/6,

    },

    touchButtonText: {
        color:'black',
        fontSize:17,
        width:(RIGHT_WIDTH-30)/2,
        height:30,
        textAlign:'center',
        textAlignVertical:'center',
        ...Platform.select({
            ios: { lineHeight: 30},
            android: {}
        })
    },


    stouchButtonText: {
        fontSize:17,
        width:(RIGHT_WIDTH-30)/2,
        height:30,
        color:sys.whiteColor,
        textAlign:'center',
        textAlignVertical:'center',
        ...Platform.select({
            ios: { lineHeight: 30},
            android: {}
        })
    },


    twostouchButton:{
       // height: 40,
        width: (RIGHT_WIDTH-30)/2,

        borderRadius:5,
        borderWidth:1,
        borderColor:sys.mainColor,
        backgroundColor: sys.mainColor,
        justifyContent: 'center',
        overflow: 'hidden',
      //  margin:(RIGHT_WIDTH - 150)/6,
        marginLeft:10,
        marginTop:10,

    },

    twotouchButton: {
        //height: 40,
        width: (RIGHT_WIDTH-30)/2,

        borderRadius:5,
        borderWidth:1,
        borderColor:sys.grayColor,
        backgroundColor: "white",
        justifyContent: 'center',
        overflow: 'hidden',
        
        marginLeft:10,
        marginTop:10,

    },

    twoButtonView:{
        height: 70,
        width: 60,

        backgroundColor: sys.whiteColor,
        
        marginLeft:(RIGHT_WIDTH - 180)/4,
        marginTop:10,

    },


    peilvText:{
        width:70,
        height:30,
        color:sys.titleColor,
        textAlign:'center',
        textAlignVertical:'center',
        fontSize:15,
        ...Platform.select({
            ios: { lineHeight:30},
            android: {}
        })
    },
    beishuView:{
        height: 45,
        width: SCREEN_WIDTH,
        flexDirection:'row'
    },
    reduceBtn:{
        height: 30,
        width: 30,
        top:10,
        borderRadius: 3,
        backgroundColor: sys.mainColor,
        justifyContent: 'center',
        overflow: 'hidden',
        margin:2,
    },

    payButtonText: {
        color: "white",
        textAlign: 'center',
    },
    footer: {
        height: 60,
        width: SCREEN_WIDTH,
        flexDirection:'row'
    },
    yuerbar: {
        height: 60,
        width: SCREEN_WIDTH/4,
        justifyContent: 'center',
        alignContent: 'center',
    },
    nameHeader: {
        color: sys.subTitleColor,
        fontSize: 16,
        margin:5,
        // fontFamily: 'regular',
        textAlign: 'center'
    },
    yuer:{
        color:sys.mainColor,
        fontSize: 17,
        textAlign: 'center'
    },
    payButton:{
        height: 30,
        width: 60,
        top:10,
        borderRadius: 3,
        backgroundColor: sys.mainColor,
        justifyContent: 'center',
        overflow: 'hidden',
        margin:2,
    },
    beishuCount:{
        marginTop:10,
        height: 35,
        width: 60,
        lineHeight:15,
        borderRadius: 3,
        fontSize:16,
        textAlign: 'center',
        overflow: 'hidden',
        backgroundColor: 'white',
        paddingTop: 5
    },


})



