/**
 * Created by Native on 2019/2/17.
 */


import React, {Component} from 'react'
import {
    StyleSheet,
    Text,
    View,
    Dimensions,
    ScrollView, SafeAreaView,
    Button,
    TextInput,
    Alert,
    TouchableOpacity, Picker, Platform, DeviceEventEmitter
} from 'react-native';

import ScrollableTabView, {DefaultTabBar, } from 'react-native-scrollable-tab-view';

import {sys,NoDataView,isIphoneX} from "../../common/Data"

import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'

import Toast,{DURATION} from 'react-native-easy-toast';//导入弹出框组件

const host = sys.host;
const RIGHT_WIDTH = Dimensions.get('window').width*0.75;
const LEFT_WIDTH = Dimensions.get('window').width*0.25;

const SCREEN_WIDTH = Dimensions.get('window').width;

import LeftPlayView from '../LeftPlayView';

var myThis;

export default class SixhcBuZhong extends React.Component {


    constructor(props) {
        super(props);


        this.state = {
            playList:['五不中','六不中','七不中','八不中','九不中','十不中'],
            leftbtnSeletIndex:0,
            twoMianList:['大','小','单','双','大单','大双','小单','小双','合大','合小','合单','合双','尾大','尾小','红波','绿波','蓝波'],
            nowcpinfo:{},
            lhcRates:{},
            zhushuNum:0,
            beishu:'1',

            wanFaStr:'bz5bz',
            wanFaArr:['bz5bz','bz6bz','bz7bz','bz8bz','bz9bz','bz10bz'],
            

             xiazhiArr:[],
             twoMianXiaZhuPl:[],

        }
    }


    render(){

      
        let changeKj = null;

        myThis = this;

        // var scrollH = sys.dheight-310;
        // if(isIphoneX()){
        //     scrollH = sys.dheight-340;
        // }

        var scrollH = sys.zhongjianIsHaveChange;

        var remark = ''
        var rate = ''

        if (this.state.leftbtnSeletIndex ==0) {

            if (this.state.lhcRates.hasOwnProperty('bz5bz')) {

                remark = this.state.lhcRates['bz5bz']['remark'];
                rate = this.state.lhcRates['bz5bz']['rate'] ;
            }
        } else if (this.state.leftbtnSeletIndex ==1) {
            if (this.state.lhcRates.hasOwnProperty('bz6bz')) {
                remark = this.state.lhcRates['bz6bz']['remark'];
                rate = this.state.lhcRates['bz6bz']['rate'] ;
            }
        } else if (this.state.leftbtnSeletIndex ==2) {
            if (this.state.lhcRates.hasOwnProperty('bz7bz')) {
                remark = this.state.lhcRates['bz7bz']['remark'];
                rate = this.state.lhcRates['bz7bz']['rate'] ;
            }
        } else if (this.state.leftbtnSeletIndex ==3) {
            if (this.state.lhcRates.hasOwnProperty('bz8bz')) {
                remark = this.state.lhcRates['bz8bz']['remark'];
                rate = this.state.lhcRates['bz8bz']['rate'] ;
            }
        } else if (this.state.leftbtnSeletIndex ==4) {
            if (this.state.lhcRates.hasOwnProperty('bz9bz')) {
                remark = this.state.lhcRates['bz9bz']['remark'];
                rate = this.state.lhcRates['bz9bz']['rate'] ;
            }
        } else if (this.state.leftbtnSeletIndex ==5) {
            if (this.state.lhcRates.hasOwnProperty('bz10bz')) {
                remark = this.state.lhcRates['bz10bz']['remark'];
                rate = this.state.lhcRates['bz10bz']['rate'] ;
            }
        }

      //  if (this.state.leftbtnSeletIndex ==0) {

            changeKj = this.teMaZhiXuan();

        // } else {
        //     changeKj = this.teMaLiangMian();
        // }


        let isCunZai = this.state.lhcRates.hasOwnProperty('bz5bz')
        let rarmkView = isCunZai?<Text style={{
            marginLeft: 10, marginTop: 10,width: RIGHT_WIDTH - 20,
            color: sys.titleColor,textAlign: 'left',textAlignVertical: 'center',paddingBottom:10
        }}>{remark+'赔率'}<Text style={{color:sys.mainColor}}>{rate}</Text>{"倍"}</Text>:<NoDataView
              isloading = {this.props.visible} click={()=>this.props.lodaData()}
              text = {"重新加载"}></NoDataView>

        rightView = <ScrollView
            style={{
                backgroundColor:"white",
                width:RIGHT_WIDTH,
                height:scrollH
            }}
        >
                    {rarmkView}
                
                    {changeKj}

                    <View style={{height:50}}></View>
               
            </ScrollView>

        return(
            <KeyboardAwareScrollView
                style={styles.container}
                keyboardShouldPersistTaps = {"always"}

            >
        <View>
            <View style={styles.hengcontainer}>
                <LeftPlayView scrollH={scrollH} playList={this.state.playList} playtit="999" leftclickselet={(indext,leftbtnSeletIndex)=>{

                    this.leftClickSelet(indext)

                }}
                />

                {rightView}

            
            </View>

            <View style={styles.beishuView} >

                <TouchableOpacity  style={styles.reduceBtn }
                    onPress={() => {

                        if (this.state.beishu == '' || this.state.beishu == null) {
                            this.setState({
                                beishu : '',
                             
                            })
                            return;
                        }

                        if(this.state.beishu == 1){
                        return;
                        }else {

                        var mewBeishu = parseInt(this.state.beishu) - 1;


                            this.setState({
                                beishu : mewBeishu+'',

                            })

                        }
                    }}
                >
                    <Text style={styles.payButtonText} >-</Text>
                </TouchableOpacity>


                <TextInput underlineColorAndroid='transparent' value={this.state.beishu}
                keyboardType='numeric'  style={styles.beishuCount}  ref="beishucount"
                onChangeText={(text) => this.setState({beishu:text})}
                ></TextInput>

                <TouchableOpacity  style={styles.reduceBtn }
                    onPress={() => {


                    if (this.state.beishu == '' || this.state.beishu == null) {
                        this.setState({
                            beishu : '1',
                            
                        })
                        return;
                    }

                    var mewBeishu = parseInt(this.state.beishu) + 1

                        this.setState({
                            beishu : mewBeishu+'',
                        })
                    }}
                >
                    <Text style={styles.payButtonText}>+</Text>
                </TouchableOpacity>

                </View>


                <View style={styles.footer}>
                <View style={styles.yuerbar}>
                    <Text style={styles.nameHeader}>总额</Text>
                    <Text style={styles.yuer}>{this.state.beishu*2*this.state.zhushuNum + '元'}</Text>
                </View>
                <View style={styles.yuerbar}>
                    <Text style={styles.nameHeader}>单注：</Text>
                    <Text style={styles.yuer}>2元</Text>
                    {/*<FormInput style={styles.yuer} placeholder="111" />*/}
                </View>
                <View style={styles.yuerbar}>
                    <Text style={styles.nameHeader}>共</Text>
                    <Text style={styles.yuer}>{this.state.zhushuNum +'注'}</Text>
                </View>

                <TouchableOpacity  style={styles.payButton }
                    onPress={() => {
                    this.buyClick()
                    }}
                >
                    <Text style={styles.payButtonText}>下注</Text>
                </TouchableOpacity>

            </View>

        </View>
        <Toast  //提示
                    ref="toast"
                    style={{backgroundColor:'gray'}}
                    position='top'
                    positionValue={200}
                    opacity={0.6}
                    textStyle={{color:'white'}}
                />  
        </KeyboardAwareScrollView>

        )



    }

    buyClick(){
       // console.log('下注')


       let isCunZai = this.state.lhcRates.hasOwnProperty('bz5bz')

       if (!isCunZai) {
        this.props.lodaData()
         return;
       }

       if (!myThis.state.zhushuNum) {
       
        this.refs.toast.show("请选择完整的号码!", DURATION.LENGTH_LONG); 
        return;
    }
       this.props.onPress();
    }


    leftClickSelet(indext){

        if (this.state.leftbtnSeletIndex == indext) {
            return;
        }

        this.cleanJiemian(true,indext)
        
    }

    cleanJiemian(isDqClean,indext){
        for (var key in myThis.refs) {

            if ((key.indexOf("CustomTwoButton") != -1) ||(key.indexOf("CustomButton") != -1)) {

                myThis.refs[key].setState({
                    selected: false
                });
            }
        }


        if (isDqClean) {
            this.setState({
                leftbtnSeletIndex:indext,
                xiazhiArr:[],
                zhushuNum:0,
                 wanFaStr:this.state.wanFaArr[indext],
            })
        } else{
            this.setState({
                xiazhiArr:[],
                zhushuNum:0,
                 wanFaStr:this.state.wanFaArr[indext],
            })
        }
        
    }




    teMaZhiXuan(){
           return<View style={{// 主轴方向
                flexDirection:'row',
                //  justifyContent: 'space-between',
                // 一行显示不下,换一行
                flexWrap:'wrap',
                // 侧轴方向
                width:RIGHT_WIDTH,
                alignItems:'center',}
                }>

                {sys.lhc_numData.map((info, index) => {
                    return (

                        <CustomButton ref={'CustomButton'+index} style={{height:100,width:50,backgroundColor:'red'}} key={index} info={info}  onPress={this.itemClick.bind(this, info)}/>

                    );
                })}




            </View>
    }

    teMaLiangMian(){


        return<View style={{// 主轴方向
            flexDirection:'row',
            //  justifyContent: 'space-between',
            // 一行显示不下,换一行
            flexWrap:'wrap',
            // 侧轴方向
            width:RIGHT_WIDTH,
            alignItems:'center',}
            }>

            {this.state.twoMianList.map((info, index) => {
                return (

                    <CustomTwoButton style={{height:100,width:50,backgroundColor:'red'}} key={index} info={info}  onPress={this.itemTwoClick.bind(this, info)}/>

                );
            })}




        </View>

    }



    countFun() {


        myThis.state.xiazhiArr = [];
        var index = 0
        for (var key in myThis.refs) {

            if ((key.indexOf("CustomButton") != -1)) {

                if(myThis.refs[key].state.selected != null&&myThis.refs[key].state.selected){
                    var numStr = sys.lhc_numData[index]['num'];
                    myThis.state.xiazhiArr.push(numStr)
                }

                // console.log(key)

                // console.log(index)

                index++;
            }
        }
        
    }


    itemTwoClick(info) {

    }

    itemClick(info) {

        // var numStr = info['num'];

        // if (myThis.state.xiazhiArr.indexOf(numStr) == -1) {
        //     myThis.state.xiazhiArr.push(numStr)

        // } else {
        //     myThis.state.xiazhiArr.splice(myThis.state.xiazhiArr.indexOf(numStr, 1))
        // }


        myThis.countFun()


        var zhushuNum = myThis.combine(myThis.state.xiazhiArr,myThis.state.leftbtnSeletIndex+5).length
        

      //  console.log(zhushuNum);

        myThis.setState({
            xiazhiArr:myThis.state.xiazhiArr,
            zhushuNum:zhushuNum,
        })
    }


    combine(arr, num) {
        var r = [];
        (function f(t, a, n) {
            if (n == 0) return r.push(t);
            for (var i = 0, l = a.length; i <= l - n; i++) {
                f(t.concat(a[i]), a.slice(i + 1), n - 1);
            }
        })([], arr, num);
        return r;
    }

}






class CustomButton extends Component {

    constructor() {
        super();
        this.state = {

            selected: false,
       
        };
    }




    // 'num':'2',
    // 'bo': 'red',
    // 'sx': '鸡'

    render() {
        var {info} = this.props;



        // console.log(info.num)
        // console.log(info.bo)
        // console.log(info.sx)


        // if(xuanzo==1)this.state.selected=true;

         const { selected } = this.state;


        return (

            <TouchableOpacity  style={selected?[styles.stouchButton,{backgroundColor:info.bo}]:styles.touchButton}
                                onPress={() => {

                                    this.setState({ selected: !selected } ,() => {
                                        //这里打印的是最新的state值
                                        this.props.onPress();

                                    })
                                }}>
                                
                <Text style={selected?styles.stouchButtonText:([styles.touchButtonText,{color:info.bo}])}>{info.num}</Text>
            </TouchableOpacity>



        );

      



    }
}

class CustomTwoButton extends Component {

    constructor() {
        super();
        this.state = {

            selected: false,
       
        };
    }




    // 'num':'2',
    // 'bo': 'red',
    // 'sx': '鸡'

    render() {
        var {info} = this.props;



        // console.log(info.num)
        // console.log(info.bo)
        // console.log(info.sx)


        // if(xuanzo==1)this.state.selected=true;

         const { selected } = this.state;


        return (



            <View style={styles.twoButtonView}>

                 <TouchableOpacity  style={selected?styles.twostouchButton:styles.twotouchButton}
                                onPress={() => {

                                    this.setState({ selected: !selected } ,() => {
                                        //这里打印的是最新的state值
                                        this.props.onPress();

                                    })
                                }}>
                                
                    <Text style={selected?styles.stouchButtonText:styles.touchButtonText}>{info}</Text>
                </TouchableOpacity>
               
                 <Text style={styles.peilvText}>1.9</Text>
            

            </View>

        );

      



    }
}

const styles = StyleSheet.create({


    hengcontainer:{
        flexDirection:'row',
        marginTop: Platform.OS == 'ios' ? 0 : 0,
        backgroundColor:'white'
    },

    stouchButton:{
        height: 30,
        width: 30,

        borderRadius:15,
        backgroundColor: sys.mainColor,

        

        justifyContent: 'center',
        overflow: 'hidden',
      //  margin:(RIGHT_WIDTH - 150)/6,
        marginLeft:(RIGHT_WIDTH - 150)/6,
        marginTop:(RIGHT_WIDTH - 150)/6,
    },

    touchButton: {
        height: 30,
        width: 30,

        borderRadius:15,
        borderWidth:1,
        borderColor:sys.grayColor,
        backgroundColor: "white",
        justifyContent: 'center',
        overflow: 'hidden',
        marginLeft:(RIGHT_WIDTH - 150)/6,
        marginTop:(RIGHT_WIDTH - 150)/6,

    },

    touchButtonText: {
        color: sys.mainColor,
        textAlign: 'center',
    },


    stouchButtonText: {
        color: "white",
        textAlign: 'center',
    },


    twostouchButton:{
        height: 40,
        width: 60,

        borderRadius:5,
        borderWidth:1,
        borderColor:sys.mainColor,
        backgroundColor: sys.mainColor,
        justifyContent: 'center',
        overflow: 'hidden',
      //  margin:(RIGHT_WIDTH - 150)/6,

    },

    twotouchButton: {
        height: 40,
        width: 60,

        borderRadius:5,
        borderWidth:1,
        borderColor:sys.grayColor,
        backgroundColor: "white",
        justifyContent: 'center',
        overflow: 'hidden',
        
        // marginLeft:(RIGHT_WIDTH - 150)/6,
        // marginTop:(RIGHT_WIDTH - 150)/6,

    },

    twoButtonView:{
        height: 70,
        width: 60,

        backgroundColor: sys.whiteColor,
        
        marginLeft:(RIGHT_WIDTH - 180)/4,
        marginTop:10,

    },


    peilvText:{
        width:70,
        height:30,
        color:sys.titleColor,
        textAlign:'center',
        textAlignVertical:'center',
        fontSize:15,
        ...Platform.select({
            ios: { lineHeight:30},
            android: {}
        })
    },
    beishuView:{
        height: 45,
        width: SCREEN_WIDTH,
        flexDirection:'row',
        borderTopWidth:1,
        borderTopColor:sys.backgroundColor,
    },
    reduceBtn:{
        height: 30,
        width: 30,
        top:10,
        borderRadius: 3,
        backgroundColor: sys.mainColor,
        justifyContent: 'center',
        overflow: 'hidden',
        margin:2,
    },

    payButtonText: {
        color: "white",
        textAlign: 'center',
    },
    footer: {
        height: 60,
        width: SCREEN_WIDTH,
        flexDirection:'row'
    },
    yuerbar: {
        height: 60,
        width: SCREEN_WIDTH/4,
        justifyContent: 'center',
        alignContent: 'center',
    },
    nameHeader: {
        color: sys.subTitleColor,
        fontSize: 16,
        margin:5,
        // fontFamily: 'regular',
        textAlign: 'center'
    },
    yuer:{
        color:sys.mainColor,
        fontSize: 17,
        textAlign: 'center'
    },
    payButton:{
        height: 30,
        width: 60,
        top:10,
        borderRadius: 3,
        backgroundColor: sys.mainColor,
        justifyContent: 'center',
        overflow: 'hidden',
        margin:2,
    },
    beishuCount:{
        marginTop:10,
        height: 35,
        width: 60,
        lineHeight:15,
        borderRadius: 3,
        fontSize:16,
        textAlign: 'center',
        overflow: 'hidden',
        backgroundColor: 'white',
        paddingTop: 5
    },

})
