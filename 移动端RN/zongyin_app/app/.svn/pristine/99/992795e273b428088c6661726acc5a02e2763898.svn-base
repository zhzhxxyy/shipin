import _ from 'lodash';

import React, { Component,PureComponent} from 'react';
import {
    StyleSheet,
    Text,
    View,
    Dimensions,
    ScrollView, SafeAreaView,
    Button,
    TextInput,
    Animated,
    Alert,
    TouchableOpacity, Picker, Platform, DeviceEventEmitter
} from 'react-native';

import {sys,isIphoneX,NoDataView} from "../common/Data";

import RefreshListView, {RefreshState} from 'react-native-refresh-list-view';
import {KaijiangHeadView} from "./common/KaijiangHeadView"

import {BuySureAlert} from "./common/CommonViewButton"

import LeftPlayView from './LeftPlayView';

import HttpUtils from "../common/HttpUtil";

import Pop from 'rn-global-modal'


import Toast,{DURATION} from 'react-native-easy-toast';//导入弹出框组件


import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'

import ActionButton from 'react-native-action-button'
import EZSideMenu from 'react-native-ezsidemenu';
import Record from './common/Record'
const RIGHT_WIDTH = Dimensions.get('window').width*0.75;
const LEFT_WIDTH = sys.dwidth/4;
const SCREEN_WIDTH = Dimensions.get('window').width;

const host = sys.host;

var k3this;

var clickLastTime=0;

var Buffer = require('buffer').Buffer;

export default class kuaiThreeAction extends Component{

    
    static  navigationOptions = ({navigation}) => {
        const { params } = navigation.state;
        return {
        title: params.item.title?params.item.title:'快3',
        headerTitleStyle:{
            alignSelf:'center',
            flex: 1,
            textAlign: 'center',
            
        },
        
        
        headerRight:React.createElement(View, null, null),
       }
    };


    constructor(props) {
        super(props);


        this.state = {

            number_arr:{},
            currFullExpect:"",
            lotteryname:this.props.navigation.state.params.item['name'],
            cptype:this.props.navigation.state.params.item['typeid'],
            actionId:this.props.navigation.state.params.item['id'],
            actionTitle:this.props.navigation.state.params.item['title'],
            dataList:[{'num':'大','pl':0},{'num':'小','pl':1},{'num':'单','pl':2},{'num':'双','pl':3},{'num':'3','pl':4},{'num':'4','pl':5},{'num':'5','pl':6},{'num':'6','pl':7},{'num':'7','pl':8},{'num':'8','pl':9},{'num':'9','pl':10},{'num':'10','pl':11},{'num':'11','pl':12},
                {'num':'12','pl':13},{'num':'13','pl':14},{'num':'14','pl':15},{'num':'15','pl':16},{'num':'16','pl':17},{'num':'17','pl':18},{'num':'18','pl':19}],

            hzPlStrList:['k3hzbig','k3hzsmall','k3hzodd','k3hzeven','k3hz3','k3hz4','k3hz5','k3hz6','k3hz7','k3hz8','k3hz9','k3hz10','k3hz11','k3hz12','k3hz13','k3hz14','k3hz15','k3hz16','k3hz17','k3hz18'],

            playList:['和值','三同号通选','三同号单选','三不同号','三连号通选','二同号复选','二同号单选','二不同号'],
            playKeys:['k3hz5','k3sthtx','k3sthdx','k3sbthbz','k3slhtx','k3ethfx','k3ethdx','k3ebthbz'],
            leftbtnSeletIndex:0,
            k3DataList:{},
            rarmktit:'',

            playKeysStr:'k3hz5',

          //  isBottomPourViewXs:false,

            zhushuNum:0,

            k3XiaZhiArr:[],

            // hzXzPlArr:[],

            hzXzNameArr:[],

            isk3sthtxSelet:false,

            kaijianJlArr:[],
            

            lotterytimesData:{},

            iskaijianResult:false,

            kaijianResult:{},
            visible:false,

            numberStr:'',
            beishu:'1',
            animation: new Animated.Value(0),

           

        };
    }



    onHeaderRefresh(){

    }
    keyExtractor(){

    }


    componentDidMount() {
        this.getDate(0);
        DeviceEventEmitter.addListener('Login',(dic)=>{
            Pop.hide()
            const {navigate} = this.props.navigation;
            this.props.navigation.navigate("Login",dic);

        });

        DeviceEventEmitter.addListener('LoginQuxiao',(dic)=>{
            Pop.hide()

        });
    }


    render(){
        k3this = this;
        let changeKj = null;
        var scrollH = sys.zhongjianIsNoChange;

        if(this.state.playKeysStr == this.state.playKeys[0]) {
            changeKj = this.k3hzView();
        } else if (this.state.playKeysStr == this.state.playKeys[1]) {
           changeKj = this.k3sthtxView(true);
        } else if (this.state.playKeysStr == this.state.playKeys[2]) {
           changeKj = this.k3sthdxView(2);
        } else if (this.state.playKeysStr == this.state.playKeys[3]){
            changeKj = this.k3sthdxView(3);
        } else if (this.state.playKeysStr == this.state.playKeys[4]){
            changeKj = this.k3sthtxView(false);
        } else if (this.state.playKeysStr == this.state.playKeys[5]) {
            changeKj = this.k3sthdxView(5);
        } else if (this.state.playKeysStr == this.state.playKeys[6]) {
            changeKj = this.k3ethdxView();
        } else if (this.state.playKeysStr == this.state.playKeys[7]){
            changeKj = this.k3sthdxView(7);
        }

        let rightView = null;


        let isCunZai = k3this.state.k3DataList.hasOwnProperty('peilv')



        let rarmkView = isCunZai?<Text style={{
            marginLeft: 10,
            marginTop: 10,
            width: RIGHT_WIDTH - 20,
            // height: 60,
            color: sys.titleColor,
            textAlign: 'left',
            textAlignVertical: 'center'
        }}>{this.state.rarmktit}</Text>:<NoDataView click={()=>this.getDate(0)}
             isloading = {this.state.visible}
             text = {"重新加载"}></NoDataView>



            rightView = <ScrollView
            style={{
                backgroundColor:"white",
                width:RIGHT_WIDTH,
                height:scrollH
            }}
        >
                   {rarmkView}

                
                    {changeKj}

                    <View style={{height:50}}></View>
               
            </ScrollView>
        // }


        const menuWidth = Dimensions.get('window').width * 0.9;
        const opacity = k3this.state.animation.interpolate({
            inputRange: [0, menuWidth],
            outputRange: [0, 1],
        });


            return (
           <EZSideMenu
            onMenuStateChaned={(isOpen) => { this.setState({ isOpen }) }}
            onPanMove={(x) => {
                 //console.log('onPanMove ' + x) 
                }}
            onSliding={(x, persent) => {
               //  console.log('onSliding x ' + x + ' persent ' + persent) 
                }}
            onPanStartMove={() => { this.setState({ scroll: false }) }}//adapt android
            onPanEndMove={() => { this.setState({ scroll: true }) }}//adapt android
            type={EZSideMenu.type.Default}
            menuStyle={styles.container}
            shadowStyle={{ backgroundColor: 'rgba(20,20,20,.7)' }}
            direction={EZSideMenu.direction.Left}
            ref="menu"
            position={this.state.animation}
            width={menuWidth}
            menu={this.menu(opacity)}
            panWidthFromEdge={200}
            animationFunction={(prop, value) => Animated.spring(prop, {
                friction: 10,
                toValue: value
            })}>
             <KeyboardAwareScrollView
                style={styles.container}
                keyboardShouldPersistTaps = {"always"}
            >

            <View style={styles.container}>

    
              <KaijiangHeadView name={this.state.lotteryname} typeid={this.state.cptype} codeNum={3} KaijiangReturn={(currFullExpect)=>{
                       
                       this.setState({currFullExpect:currFullExpect})
                }}/> 

                <View style={styles.hengcontainer}>
                     <LeftPlayView scrollH={scrollH} playList={this.state.playList} playtit="999" leftclickselet={(indext,leftbtnSeletIndex)=>{

                         k3this.leftClickSelet(indext,leftbtnSeletIndex)

                     }}
                     />

                    {rightView}
                </View>

                <View style={styles.beishuView} >
                    <TouchableOpacity  style={styles.reduceBtn }
                     onPress={() => {

                        if (k3this.state.beishu == '' || k3this.state.beishu == null) {
                            k3this.setState({
                                beishu : '',
                             
                            })
                            return;
                        }

                       if(k3this.state.beishu == 1){
                           return;
                       }else {
                          var mewBeishu = parseInt(k3this.state.beishu) - 1;
                           k3this.setState({
                               beishu : mewBeishu+'',
                           })
                       }
                   }}
>
                   <Text style={styles.payButtonText} >-</Text>
                   </TouchableOpacity>

                    <TextInput underlineColorAndroid='transparent' value={k3this.state.beishu}
                       keyboardType='numeric'  style={styles.beishuCount}  ref="beishucount"
                       onChangeText={(text) =>{


                        k3this.setState({beishu:text})
                       }}
                    ></TextInput>

                    <TouchableOpacity  style={styles.reduceBtn }
                     onPress={() => {


                    if (k3this.state.beishu == '' || k3this.state.beishu == null) {
                        k3this.setState({
                            beishu : '1',
                         
                        })
                        return;
                    }

                     var mewBeishu = parseInt(k3this.state.beishu) + 1

                    k3this.setState({
                           beishu : mewBeishu+'',
                        
                       })

                      }}
                    >
                    <Text style={styles.payButtonText}>+</Text>
                    </TouchableOpacity>

                    </View>


                    <View style={styles.footer} >
                         <View style={styles.yuerbar}>
                            <Text style={styles.nameHeader}>总额</Text>
                            <Text style={styles.yuer}>{k3this.state.beishu*2*k3this.state.zhushuNum + '元'}</Text>
                        </View>
                        <View style={styles.yuerbar}>
                            <Text style={styles.nameHeader}>单注：</Text>
                            <Text style={styles.yuer}>2元</Text>
                            {/*<FormInput style={styles.yuer} placeholder="111" />*/}
                        </View>
                        <View style={styles.yuerbar}>
                            <Text style={styles.nameHeader}>共</Text>
                            <Text style={styles.yuer}>{k3this.state.zhushuNum +'注'}</Text>
                        </View>

                        <TouchableOpacity  style={styles.payButton }
                                onPress={() => {
                                this.buyClick()
                             }}
                         >
                            <Text style={styles.payButtonText}>下注</Text>
                        </TouchableOpacity>

                    </View>




                    <ActionButton
                    buttonColor="rgba(231,76,60,1)"   offsetY={80} offsetX={10} position='right'
                    onPress={() => {


                        if (!k3this.state.kaijianJlArr.length) {
                            k3this.getKaijianJuliData();
                            return;
                        } 
                        k3this.rightViewClick();
                     }}
                    renderIcon={() => (<View >
                          {/*<Text style={{color:'white',lineHeight:18,fontSize:14,textAlign:'center'}}>下注</Text>*/}
                          <Text style={{color:'white',lineHeight:18,fontSize:14,textAlign:'center'}}>记录</Text>
                          </View>)}
                    />

                   {/* <View style={{backgroundColor:sys.silveryColor,height:10}}></View> */}

            </View>
            <Toast  //提示
                    ref="toast"
                    style={{backgroundColor:'gray'}}
                    position='center'
                    positionValue={200}
                    opacity={0.6}
                    textStyle={{color:'white'}}
                />     
             </KeyboardAwareScrollView>
             </EZSideMenu>

        );
    }



    rightViewClick(){
        if (this.refs.menu) {
            this.state.isOpen ? this.refs.menu.close() : this.refs.menu.open();
        }
    }

    menu(opacity) {
        const menu = (
            <Animated.View style={{ flex: 1, opacity }}>
                <Record ref="Record" type={this.state.cptype} lotteryname={this.state.lotteryname} 
                onPress={k3this.orderDetail.bind()}
                style={{ flex: 1}}>
                </Record>
            </Animated.View>
        );
        return menu
    }



    orderDetail(e) {
        const {navigate} = k3this.props.navigation;
        navigate('OrderDetail',{item:e})
    }


    buyClick(u){

        if(global.user.loginState != 1) {
            DeviceEventEmitter.emit('Login', {});
            return false;
        }

        let isCunZai = k3this.state.k3DataList.hasOwnProperty('peilv')

        if (!isCunZai) {

            this.refs.toast.show('赔率没加载成功', DURATION.LENGTH_LONG);
    
            this.getDate(0)
            return;
        }


        if (!k3this.state.zhushuNum) {
         
            k3this.refs.toast.show('请选择号码', DURATION.LENGTH_LONG);
            return;
        }

        if (!k3this.state.beishu) {
   
            k3this.refs.toast.show('倍数不能为空', DURATION.LENGTH_LONG);
            return; 
        }

        var numberStr = '';


        if (k3this.state.leftbtnSeletIndex == 3) {

            var newArr = k3this.combine(k3this.state.k3XiaZhiArr,3)

            for(var i=0;i<newArr.length;i++) {
                var newStr = newArr[i];
                if (numberStr.length) {
                    numberStr+='#'+newStr;
                } else {
                    numberStr+=newStr;
                }
            }

        } else if (k3this.state.leftbtnSeletIndex == 6) {



            var oneArr = [];
            var twoArr = [];


            for(var i=0;i<k3this.state.k3XiaZhiArr.length;i++) {

                var indextStr = k3this.state.k3XiaZhiArr[i]
    
               // console.log(indextStr)
    
                if (indextStr.length == 2) {
                    oneArr.push(indextStr)
                } else {
                    twoArr.push(indextStr)
                }
    
            }
    

            for (var i=0;i<oneArr.length;i++) {
                var oneStr = oneArr[i];
                for(var j=0;j<twoArr.length;j++) {
                    var twoStr = twoArr[j];
                    var newStr = oneStr +twoStr;
                    if (numberStr.length) {
                        numberStr+='#'+newStr;
                    } else {
                        numberStr+=newStr;
                    }
                }
            }

        } else if (k3this.state.leftbtnSeletIndex == 7) {
            var newArr = k3this.combine(k3this.state.k3XiaZhiArr,2)

            for(var i=0;i<newArr.length;i++) {
                var newStr = newArr[i];
                if (numberStr.length) {
                    numberStr+='#'+newStr;
                } else {
                    numberStr+=newStr;
                }
            }
        } else {


           for (var i=0;i<k3this.state.k3XiaZhiArr.length; i++) {

               if (numberStr.length) {
                    numberStr+='#'+k3this.state.k3XiaZhiArr[i];
                } else {
                    numberStr+=k3this.state.k3XiaZhiArr[i];
                }

           }

       }


       k3this.setState({
        numberStr:numberStr,
       })

        let playtitle = k3this.state.playList[k3this.state.leftbtnSeletIndex]

        var amount = k3this.state.beishu*2*k3this.state.zhushuNum;
         var tipMessage= playtitle+":"+numberStr +"  注数:"+k3this.state.zhushuNum +"  金额:"+amount+'元'

        Pop.show(

            <BuySureAlert name={k3this.props.navigation.state.params.item['title']} lotteryname={k3this.state.lotteryname} 
            currFullExpect={k3this.state.currFullExpect} 
            orderDetailMessage={tipMessage} totalAmount={amount} touzhuList={[]} 
            onPress={k3this.mashangxiazhu.bind()}/>
            )

    }


    mashangxiazhu(sure){



        if (!sure) {
            Pop.hide()
            return;
        }

        var nowTime= (new Date()).getTime();
        if(Math.abs(nowTime-clickLastTime)<sys.clickIntervalTime){
            //小于1 秒 点击速度太快导致重复下单 
            k3this.refs.toast.show('请勿重复提交', DURATION.LENGTH_LONG);
          
            Pop.hide()
            return false;
        }
        clickLastTime=nowTime;

        let codeurl = host + "/AppApijiekou.cpbuy"

        let formData = new FormData();
     
        let isCunzai = k3this.state.k3DataList.hasOwnProperty('rates')

        let orderList=[];



        if (k3this.state.leftbtnSeletIndex == 0) {

            for (var i=0;i<k3this.state.k3XiaZhiArr.length; i++) {


                var fsate =  {

                };

                fsate['trano'] = k3this.generateMixed(20);
               // fsate['playtitle'] = k3this.state.playList[k3this.state.leftbtnSeletIndex] + k3this.state.k3XiaZhiArr[i];
                fsate['playtitle'] = isCunzai?(k3this.state.k3DataList['rates']['rates'][k3this.state.hzXzNameArr[i]]['title']):''

                fsate['playid'] = k3this.state.hzXzNameArr[i];
                fsate['number'] = k3this.state.k3XiaZhiArr[i];
                fsate['zhushu'] = '1';
                fsate['price'] = k3this.state.beishu *2;
                fsate['minxf'] = isCunzai?(k3this.state.k3DataList['rates']['rates'][k3this.state.hzXzNameArr[i]]['minxf']):'';
                fsate['totalzs'] = isCunzai?(k3this.state.k3DataList['rates']['rates'][k3this.state.hzXzNameArr[i]]['totalzs']):'';
                fsate['maxjj'] = isCunzai?(k3this.state.k3DataList['rates']['rates'][k3this.state.hzXzNameArr[i]]['maxjj']):'';
                fsate['minjj'] = isCunzai?(k3this.state.k3DataList['rates']['rates'][k3this.state.hzXzNameArr[i]]['minjj']):'';
                fsate['maxzs'] = isCunzai?(k3this.state.k3DataList['rates']['rates'][k3this.state.hzXzNameArr[i]]['maxzs']):'';
                fsate['rate'] = isCunzai?(k3this.state.k3DataList['rates']['rates'][k3this.state.hzXzNameArr[i]]['rate']):'';


                orderList.push(fsate)
                
            }

        } else {

            // console.log(k3this.state.numberStr)

            var fsate={

            };

            fsate['trano'] = k3this.generateMixed(20);
            //fsate['playtitle'] = k3this.state.playList[k3this.state.leftbtnSeletIndex];

            fsate['playtitle'] = isCunzai?(k3this.state.k3DataList['rates']['rates'][k3this.state.playKeys[k3this.state.leftbtnSeletIndex]]['title']):''

            fsate['playid'] =k3this.state.playKeys[k3this.state.leftbtnSeletIndex];
            fsate['number'] = k3this.state.numberStr;
            fsate['zhushu'] = k3this.state.zhushuNum;
            fsate['price'] = k3this.state.beishu * 2 *k3this.state.zhushuNum;
            fsate['minxf'] = isCunzai?(k3this.state.k3DataList['rates']['rates'][k3this.state.playKeys[k3this.state.leftbtnSeletIndex]]['minxf']):'';
            fsate['totalzs'] = isCunzai?(k3this.state.k3DataList['rates']['rates'][k3this.state.playKeys[k3this.state.leftbtnSeletIndex]]['totalzs']):'';
            fsate['maxjj'] = isCunzai?(k3this.state.k3DataList['rates']['rates'][k3this.state.playKeys[k3this.state.leftbtnSeletIndex]]['maxjj']):'';
            fsate['minjj'] = isCunzai?(k3this.state.k3DataList['rates']['rates'][k3this.state.playKeys[k3this.state.leftbtnSeletIndex]]['minjj']):'';
            fsate['maxzs'] = isCunzai?(k3this.state.k3DataList['rates']['rates'][k3this.state.playKeys[k3this.state.leftbtnSeletIndex]]['maxzs']):'';
            fsate['rate'] = isCunzai?(k3this.state.k3DataList['rates']['rates'][k3this.state.playKeys[k3this.state.leftbtnSeletIndex]]['rate']):'';

            orderList.push(fsate)
        
        }

        var base64Str= new Buffer(JSON.stringify(orderList)).toString('base64');

       // formData.append('orderList',orderList);

        formData.append("orderList",base64Str);



        let currFullExpect = k3this.state.currFullExpect;

        let lotteryname = k3this.state.lotteryname;


        // if (!currFullExpect.length || !lotteryname.length) {
   
        //     return;
        // }


        formData.append('expect',currFullExpect);

        formData.append('lotteryname',lotteryname);

       // console.log(formData)

        HttpUtils.post(codeurl,formData)
            .then(result=>{


                

                if(result['respCode']==1){

                    k3this.refs.toast.show(result['respMsg'], DURATION.LENGTH_LONG);
                   Pop.hide()

                   k3this.tiaozhuan()

                } else {
                    k3this.refs.toast.show(result['respMsg'], DURATION.LENGTH_LONG);
                    Pop.hide()
                }


            })
            .catch(error=>{
                
                k3this.refs.toast.show(error, DURATION.LENGTH_LONG);
                Pop.hide()

            })
    }



    tiaozhuan(){

        for (var key in k3this.refs) {

            if ((key.indexOf("CustomSthdxButton") != -1) || (key.indexOf("CustomEthdxButton") != -1) || (key.indexOf("cusOneButton") != -1)
            ) {

                k3this.refs[key].setState({
                    selected: false
                });
            }
        }

        k3this.setState(
            {
                k3XiaZhiArr: [],
                hzXzNameArr: [],
                zhushuNum:0,
                isk3sthtxSelet: false,
            }
        )

        k3this.props.navigation.navigate("BetsResult");
        
    }

     //生成随机订单号
   generateMixed(n) {

        var chars = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];

        var res = "";
        for(var i = 0; i < n ; i ++) {
            var id = Math.ceil(Math.random()*35);
            res += chars[id];
        }
        return res;
    }



    leftClickSelet(index,leftbtnSeletIndex){

            let isCunZai = k3this.state.k3DataList.hasOwnProperty('peilv')

            if (!isCunZai) {
                k3this.getDate(3);
            }

            if (leftbtnSeletIndex != index) {
                k3this.setState(
                    {
                        k3XiaZhiArr: [],
                        // hzXzPlArr: [],
                        hzXzNameArr: [],
                      //  isBottomPourViewXs: false,

                        zhushuNum:0,

                        isk3sthtxSelet: false,

                        leftbtnSeletIndex: index,

                    }
                )

                for (var key in k3this.refs) {



                    if ((key.indexOf("CustomSthdxButton") != -1) || (key.indexOf("CustomEthdxButton") != -1) || (key.indexOf("cusOneButton") != -1)
                    ) {

                        k3this.refs[key].setState({
                            selected: false
                        });
                    }
                }
            }

            //  console.log(k3this.state.k3DataList + k3this.state.k3DataList['rates']['rates'][k3this.state.playKeysStr]['remark'])

            if (index < k3this.state.playKeys.length) {
                k3this.setState(
                    {
                        playKeysStr: k3this.state.playKeys[index],

                        rarmktit: isCunZai ? k3this.state.k3DataList['rates']['rates'][k3this.state.playKeys[index]]['remark'] : '',

                    }
                )
            }

      //  }

    }


    itemClickCountFun(){

        k3this.state.k3XiaZhiArr = []

        // k3this.state.hzXzPlArr=[]

        k3this.state.hzXzNameArr=[]

        var index = 0
        for (var key in k3this.refs) {

            if ((key.indexOf("cusOneButton") != -1)) {

                if(k3this.refs[key].state.selected != null&&k3this.refs[key].state.selected){
                    
                    let plIndext = this.state.dataList[index]['pl'];

                    let plName = k3this.state.hzPlStrList[plIndext];

                    // let hzPl = k3this.state.k3DataList['peilv'][plName];

                    k3this.state.k3XiaZhiArr.push(this.state.dataList[index]['num'])

                    // k3this.state.hzXzPlArr.push(hzPl)

                    k3this.state.hzXzNameArr.push(plName)


                }
                index++;
            }
        } 

    }

    itemClick(e){

        // if (k3this.state.k3DataList.hasOwnProperty('peilv')) {
             k3this.itemClickCountFun()

            k3this.setState({
                k3XiaZhiArr: k3this.state.k3XiaZhiArr,
              //  isBottomPourViewXs: k3this.state.k3XiaZhiArr.length,

                // hzXzPlArr: k3this.state.hzXzPlArr,

                zhushuNum:k3this.state.k3XiaZhiArr.length,

                hzXzNameArr: k3this.state.hzXzNameArr,
            })


        // }

       // console.log(k3this.state.k3XiaZhiArr +' '+ k3this.state.k3XiaZhiArr.length + " "+k3this.state.hzXzPlArr.length);


    }



    getDate(num) {

        k3this.setState({
            visible: true
        });


        let lotteryname = k3this.state.lotteryname;

        let codeurl = host + "/AppGame.k3.code."+lotteryname+".do"


        let formData = new FormData();

        HttpUtils.post(codeurl,formData)
            .then(result=>{


                k3this.setState({
                    visible: false
                });

                if(result['respCode']==1){


                    let testData = result['data'];

                    this.setState({
                        k3DataList:testData,

                        rarmktit:testData['rates']['rates'][this.state.playKeysStr]['remark'],

                    })

                }else{

                    this.setState({
                        refreshState: RefreshState.Idle,
                        noNetwork:false,
                    })

                    k3this.refs.toast.show(result['respMsg'], DURATION.LENGTH_LONG);
          

                }

            })
            .catch(error=>{
        
                k3this.setState({
                    visible: false
                });

                if (num <= 0) {
                    k3this.getDate(num + 1)
                }else{
            
                    k3this.refs.toast.show("网络错误", DURATION.LENGTH_LONG);
                }

            })


    }






    getKaijianJuliData() {
    // AppApijiekou.lotteryopencodes 开奖记录
        let codeurl = host + "/AppApijiekou.lotteryopencodes"
        let formData = new FormData();
        // 请求参数 ('key',value)
        // formData.append('page', this.state.currentPage);

        k3this.setState({
            visible: true
        });

        let lotteryname = k3this.state.lotteryname;
        formData.append('lotteryname',lotteryname);

        HttpUtils.post(codeurl,formData)
            .then(result=>{

                k3this.setState({
                    visible: false
                });

                console.log(result);

                if(result['respCode']==1){


                    let testData = result['data'];

                    this.setState({

                        kaijianJlArr:testData,

                    })


                    k3this.rightViewClick();

                }else{

                    this.setState({
                        noNetwork:false,
                    })

                }

            })
            .catch(error=>{
                k3this.setState({
                    visible: false
                });
            })
    }


    combine(arr, num) {
        var r = [];
        (function f(t, a, n) {
            if (n == 0) return r.push(t);
            for (var i = 0, l = a.length; i <= l - n; i++) {
                f(t.concat(a[i]), a.slice(i + 1), n - 1);
            }
        })([], arr, num);
        return r;
    }


    k3hzView() {

        return <View style={{width:RIGHT_WIDTH,}}>

            {/*<View>*/}

            <View style={{// 主轴方向
                flexDirection:'row',
                //  justifyContent: 'space-between',
                // 一行显示不下,换一行
                flexWrap:'wrap',
                // 侧轴方向
                width:RIGHT_WIDTH,
                alignItems:'center',}
            }>

                {this.state.dataList.map((info, index) => {
                    return (

                        <CustomButton ref={'cusOneButton'+index} key={index} info={info}  onPress={this.itemClick.bind(this, info)}/>

                    );
                })}




            </View>

                {/*<View style={{height:130,width:300,backgroundColor:'red'}}></View>*/}



            </View>

    }


    k3sthtxView(isSth){

        let contentStr = isSth?'三同号通选':'三连号通选'

        return <TouchableOpacity onPress={this.k3sthtxClick.bind(this, contentStr)}  activeOpacity={0.2} focusedOpacity={0.5}>
            {/*<View style=  {{justifyContent:'center',alignItems:'center',width:128,height:128,backgroundColor:'#841584'}}>*/}
            <View style= {{marginLeft:10,marginTop:10,width:RIGHT_WIDTH-20,height:45,backgroundColor:this.state.isk3sthtxSelet?sys.mainColor:sys.whiteColor
            ,borderWidth:this.state.isk3sthtxSelet?0:1,borderColor:sys.grayColor,borderRadius:5,
            }}>
                {/*<Image source={require('./image/ic_search.png')}>*/}
                {/*</Image>*/}

                <Text style={{width:RIGHT_WIDTH-20, height:45,color:this.state.isk3sthtxSelet?sys.whiteColor:sys.titleColor,textAlign:'center',
                    textAlignVertical:'center',
                    ...Platform.select({
                        ios: { lineHeight: 45},
                        android: {}
                    })

                }}>{contentStr}</Text>

            </View>
        </TouchableOpacity>

    };


    k3sthtxClick(e) {


        

        // if (k3this.state.visible) {
        //     this.refs.toast.show('正在加载赔率', DURATION.LENGTH_LONG);
           
        //     return;
        // }


        // let isCunZai = k3this.state.k3DataList.hasOwnProperty('peilv')

        // if (!isCunZai) {
        //     this.refs.toast.show('赔率没加载成功', DURATION.LENGTH_LONG);
      
        //     return;
        // }



        if(k3this.state.k3XiaZhiArr.indexOf(e) == -1) {
            k3this.state.k3XiaZhiArr.push(e)
        } else {
            k3this.state.k3XiaZhiArr.splice(k3this.state.k3XiaZhiArr.indexOf(e),1)
        }

        k3this.setState({
            k3XiaZhiArr: k3this.state.k3XiaZhiArr,
           // isBottomPourViewXs:k3this.state.k3XiaZhiArr.length,
            isk3sthtxSelet:!k3this.state.isk3sthtxSelet,

            zhushuNum:k3this.state.k3XiaZhiArr.length,
       
        })

    };




    k3sthdxView(leixi) {

        let dxArr =[];
        if(leixi==2) {
            dxArr = ['111','222','333','444','555','666'];
        } else if(leixi==3) {
            dxArr = ['1','2','3','4','5','6'];
        } else if(leixi==5) {
            dxArr = ['11','22','33','44','55','66'];
        } else { //7
            dxArr = ['1','2','3','4','5','6'];
        }



        return <View style={{// 主轴方向
            flexDirection:'row',
          //  justifyContent: 'space-between',
            // 一行显示不下,换一行
            flexWrap:'wrap',
            // 侧轴方向
            width:RIGHT_WIDTH,
            alignItems:'center',}
            }>

            {dxArr.map((info, index) => {
                return (

                    <CustomSthdxButton ref={'CustomSthdxButton'+index} key={index} info={info}  onPress={this.k3sthdxClick.bind(this,leixi,info)}/>

                );
            })}

            </View>
    


    }


    k3sthdxClickCountFun(leixi){
       
        k3this.state.k3XiaZhiArr = []

        let dxArr =[];
        if(leixi==2) {
            dxArr = ['111','222','333','444','555','666'];
        } else if(leixi==3) {
            dxArr = ['1','2','3','4','5','6'];
        } else if(leixi==5) {
            dxArr = ['11','22','33','44','55','66'];
        } else { //7
            dxArr = ['1','2','3','4','5','6'];
        }


        var index = 0
        for (var key in k3this.refs) {

            if ((key.indexOf("CustomSthdxButton") != -1)) {

                if(k3this.refs[key].state.selected != null&&k3this.refs[key].state.selected){

                    k3this.state.k3XiaZhiArr.push(dxArr[index])
                }
                index++;
            }
        } 


    }


    k3sthdxClick(leixi,e)
    {
        

        k3this.k3sthdxClickCountFun(leixi)

        if (leixi == 3) {
             if (k3this.state.k3XiaZhiArr.length<3) {
                k3this.setState({
                    k3XiaZhiArr: k3this.state.k3XiaZhiArr,
                    zhushuNum:0,
                 
        
                })
             } else {
                k3this.setState({
                    k3XiaZhiArr: k3this.state.k3XiaZhiArr,
                    zhushuNum:k3this.combine(k3this.state.k3XiaZhiArr,3).length,
            
        
                })
             }
        } else if (leixi ==7) {
            if (k3this.state.k3XiaZhiArr.length<2) {
                k3this.setState({
                    k3XiaZhiArr: k3this.state.k3XiaZhiArr,
                    zhushuNum:0,
               
        
                })
             } else {
                k3this.setState({
                    k3XiaZhiArr: k3this.state.k3XiaZhiArr,
                    zhushuNum:k3this.combine(k3this.state.k3XiaZhiArr,2).length,
                 
        
                })
             }
        } else {
            k3this.setState({
                k3XiaZhiArr: k3this.state.k3XiaZhiArr,
                zhushuNum:k3this.state.k3XiaZhiArr.length,
                
    
            })
        }
    }



    k3ethdxView() {

        let dxArr = ['11','22','33','44','55','66','1','2','3','4','5','6'];


        return <View style={{// 主轴方向
                flexDirection:'row',
                //  justifyContent: 'space-between',

                // 一行显示不下,换一行
                flexWrap:'wrap',
                // 侧轴方向
                width:RIGHT_WIDTH,
                alignItems:'center',
            }
            }>

                {dxArr.map((info, index) => {
                    return (

                        <CustomEthdxButton ref={'CustomEthdxButton'+index} key={index} info={info}  onPress={this.k3ethdxViewClick.bind(this, info)}/>

                    );
                })}

            </View>
      

    }


    k3ethdxViewClick(e){


        let dxArr = ['11','22','33','44','55','66','1','2','3','4','5','6'];

        if(k3this.state.k3XiaZhiArr.indexOf(e) == -1) {
            k3this.state.k3XiaZhiArr.push(e)

            if (e.length == 2) {

               let newE = e.substr(0,1)

               if (k3this.state.k3XiaZhiArr.indexOf(newE) != -1) {
                  k3this.state.k3XiaZhiArr.splice(k3this.state.k3XiaZhiArr.indexOf(newE),1)

                  let indext =0;
                  for(var i=0;i<dxArr.length;i++) {
                     if (newE == dxArr[i]) {
                        indext = i;
                        break;
                     }
                  }
                  k3this.refs['CustomEthdxButton'+indext].setState({
                    selected:false,
                  })    

               }

            } else {

                let newE = e + e


                if (k3this.state.k3XiaZhiArr.indexOf(newE) != -1) {
                    k3this.state.k3XiaZhiArr.splice(k3this.state.k3XiaZhiArr.indexOf(newE),1)
    
                    let indext =0;
                        for(var i=0;i<dxArr.length;i++) {
                          if (newE == dxArr[i]) {
                             indext = i;
                             break;
                           }
                        }
                        k3this.refs['CustomEthdxButton'+indext].setState({
                            selected:false,
                        })    
                }
            }

        } else {
            k3this.state.k3XiaZhiArr.splice(k3this.state.k3XiaZhiArr.indexOf(e),1)
        }



        var oneNum = 0
        var twoNum = 0



       // console.log(k3this.state.k3XiaZhiArr)

        for(var i=0;i<k3this.state.k3XiaZhiArr.length;i++) {

            var indextStr = k3this.state.k3XiaZhiArr[i]

           // console.log(indextStr)

            if (indextStr.length == 2) {
                oneNum++;
            } else {
                twoNum++;
            }

        }



        k3this.setState({
            k3XiaZhiArr: k3this.state.k3XiaZhiArr,
            zhushuNum:oneNum * twoNum,
            
        })
    }


    kaijianJuliView() {

        let qisuW = 150
        let qitaW = 90-1

        let zhongHeight = 40
        let zhongWidth = qisuW + qitaW*3



         return  <View  style={{width:RIGHT_WIDTH, height:sys.dheight - 150,}}>
                <ScrollView

                >
                        <ScrollView
                            horizontal={true} // 横向
                            showsHorizontalScrollIndicator={false}  // 此属性为true的时候，显示一个水平方向的滚动条。
                        >
                            <View style={{backgroundColor:'white',width:zhongWidth}}>
                                <View style={{flexDirection:'row',width:zhongWidth,height:zhongHeight,backgroundColor:'white'}}>
                                    <Text style={{marginLeft:0,textAlignVertical:'center',height:zhongHeight,width:qisuW,fontSize: 15,color:sys.titleColor,backgroundColor:sys.backgroundColor,textAlign:'center',
                                        ...Platform.select({
                                            ios: { lineHeight: zhongHeight},
                                            android: {}
                                        })

                                    }}>期数</Text>
                                     <Text style={{marginLeft:1,textAlignVertical:'center',height:zhongHeight,width:qitaW,fontSize: 15,color:sys.titleColor,backgroundColor:sys.backgroundColor,textAlign:'center',
                                         ...Platform.select({
                                             ios: { lineHeight: zhongHeight},
                                             android: {}
                                         })
                                     }}>奖号</Text>
                                        <Text style={{marginLeft:1,textAlignVertical:'center',height:zhongHeight,width:qitaW,fontSize: 15,color:sys.titleColor,backgroundColor:sys.backgroundColor,textAlign:'center',
                                            ...Platform.select({
                                                ios: { lineHeight: zhongHeight},
                                                android: {}
                                            })
                                        }}>和值</Text>
                                     <Text style={{marginLeft:1,textAlignVertical:'center',height:zhongHeight,width:qitaW,fontSize: 15,color:sys.titleColor,backgroundColor:sys.backgroundColor,textAlign:'center',

                                         ...Platform.select({
                                             ios: { lineHeight: zhongHeight},
                                             android: {}
                                         })
                                     }}>形态</Text>
                                     </View>


                                {k3this.state.kaijianJlArr.map((info, index) => {
                                    return (

                                        <KaijanJlView key={index} info={info}/>
                                    );
                                })}




                         </View>

                         </ScrollView>
                 </ScrollView>
            </View>


    }

}


class KaijanJlView extends Component {


    constructor() {
        super();
        this.state = {

        };
    }
    render() {

        // let qisuW = RIGHT_WIDTH*(5/14)
        // let qitaW = RIGHT_WIDTH*(3/14)-1

        let qisuW = 150
        let qitaW = 90-1
        let zhongHeight = 40
        let zhongWidth = qisuW + qitaW*3

        const {info} = this.props;

        let expect = info['expect']

        let opencode = info['opencode']

       // console.log(opencode)


        let kjArr = opencode.split(',')

       // console.log('ppppppp')

       // console.log(kjArr)

        var hz=0

        for (var i=0;i<kjArr.length;i++) {
            hz = hz + parseInt(kjArr[i])
        }

        //console.log(hz)

        return (
            <View style={{marginTop:1,flexDirection:'row',width:zhongWidth,height:zhongHeight,backgroundColor:'white'}}>

                <Text style={{marginLeft:0,textAlignVertical:'center',height:zhongHeight,width:qisuW,fontSize: 15,color:sys.titleColor,backgroundColor:sys.backgroundColor,textAlign:'center',
                    ...Platform.select({
                        ios: { lineHeight: zhongHeight},
                        android: {}
                    })

                }}>{expect}</Text>
                <Text style={{marginLeft:1,textAlignVertical:'center',height:zhongHeight,width:qitaW,fontSize: 15,color:sys.titleColor,backgroundColor:sys.backgroundColor,textAlign:'center',

                    ...Platform.select({
                        ios: { lineHeight: zhongHeight},
                        android: {}
                    })

                }}>{opencode}</Text>
                <Text style={{marginLeft:1,textAlignVertical:'center',height:zhongHeight,width:qitaW,fontSize: 15,color:sys.titleColor,backgroundColor:sys.backgroundColor,textAlign:'center',
                    ...Platform.select({
                        ios: { lineHeight: zhongHeight},
                        android: {}
                    })
                }}>{hz}</Text>
                <View style={{flexDirection:'row',marginLeft:1,textAlignVertical:'center',height:zhongHeight,width:qitaW,fontSize: 15,color:sys.titleColor,backgroundColor:sys.backgroundColor,textAlign:'center',}}>
                    <Text style={{marginLeft:(qitaW-2)/2-5-20,marginTop:(zhongHeight-20)/2,textAlignVertical:'center',height:20,width:20,fontSize: 15,color:sys.titleColor,backgroundColor:sys.mainColor,textAlign:'center',

                    }}>{hz>10?'大':'小'}</Text>

                    <View style={{height:15,width:2,marginTop:(zhongHeight-15)/2,marginLeft:5,backgroundColor:sys.mainColor}}/>

                    <Text style={{marginLeft:5,marginTop:(zhongHeight-20)/2,textAlignVertical:'center',height:20,width:20,fontSize: 15,color:sys.titleColor,backgroundColor:sys.mainColor,textAlign:'center',


                    }}>{hz%2?'单':'双'}</Text>

                </View>

            </View>
        )

    }
}




class CustomButton extends Component {


    constructor() {
        super();
        this.state = {
            selected: false,
            dwd:false,
            dxds:false,

        };
    }



    render() {

        const { selected } = this.state;

        // console.log(',,,,,,,,,,,,,');
        // console.log(this.props);


        var plNum='';

        var plIndext = this.props.info['pl'];

        var plName = k3this.state.hzPlStrList[plIndext];

      //  console.log(k3this.state.k3DataList.hasOwnProperty('peilv'));


        if (k3this.state.k3DataList.hasOwnProperty('peilv')) {
            plNum = k3this.state.k3DataList['peilv'][plName];
            
        }


        return (

        <TouchableOpacity ref={this.props.info['num']} title={this.props.info['num']} onPress={()=>{


            // if (k3this.state.visible) {
                
    
            //     k3this.refs.toast.show('正在加载赔率', DURATION.LENGTH_LONG);
            //     return;
            // }
            // let isCunZai = k3this.state.k3DataList.hasOwnProperty('peilv')

            // if (!isCunZai) {
        
            //     k3this.refs.toast.show('赔率没加载成功', DURATION.LENGTH_LONG);
            //     return;
            // }

            this.setState({
                selected : !this.state.selected
            },() => {
               this.props.onPress()
            })

        }}  activeOpacity={0.2} focusedOpacity={0.5}>
            {/*<View style=  {{justifyContent:'center',alignItems:'center',width:128,height:128,backgroundColor:'#841584'}}>*/}
            <View style= {[styles.customButton,{backgroundColor:selected?sys.mainColor:sys.whiteColor,borderWidth:selected?0:1,
            borderColor:sys.grayColor}]}>
                {/*<Image source={require('./image/ic_search.png')}>*/}
                {/*</Image>*/}
                <Text style={[styles.customButtonItem,{color:selected?sys.whiteColor:sys.mainColor}]}>{this.props.info['num']}</Text>
                <Text style={[styles.customButtonItem,{color:selected?sys.whiteColor:sys.mainColor}]}>{plNum}</Text>
            </View>
        </TouchableOpacity>
        )

    }
}




class CustomSthdxButton extends Component {


    constructor() {
        super();
        this.state = {
            selected: false,
            dwd:false,
            dxds:false,

        };
    }



    render() {

        const { selected } = this.state;
        // console.log(">>>>render>>>"+selected);


        return (

            <TouchableOpacity  ref={this.props.info} title={this.props.info} onPress={()=>{

                // if (k3this.state.visible) {
                //     k3this.refs.toast.show('正在加载赔率', DURATION.LENGTH_LONG);
               
                //     return;
                // }

                // let isCunZai = k3this.state.k3DataList.hasOwnProperty('peilv')

                // if (!isCunZai) {
                //     k3this.refs.toast.show('赔率没加载成功', DURATION.LENGTH_LONG);
               
                //     return;
                // }

                this.setState({
                    selected : !this.state.selected
                },() => {
                    this.props.onPress()
                })

            }}  activeOpacity={0.2} focusedOpacity={0.5}>
                {/*<View style=  {{justifyContent:'center',alignItems:'center',width:128,height:128,backgroundColor:'#841584'}}>*/}
                <View style= {[{marginLeft:10,
                    marginTop:10,
                    width:(RIGHT_WIDTH-40)/3,
                    height:30,
                    backgroundColor:sys.whiteColor,
                    borderRadius:5,},{backgroundColor:selected?sys.mainColor:sys.whiteColor
                    ,borderWidth:selected?0:1,borderColor:sys.grayColor
                    }]}>
                    {/*<Image source={require('./image/ic_search.png')}>*/}
                    {/*</Image>*/}
                    <Text style={[{width:(RIGHT_WIDTH-40)/3,
                        height:30,
                        color:sys.titleColor,
                        textAlign:'center',
                        textAlignVertical:'center',
                        ...Platform.select({
                            ios: { lineHeight:30},
                            android: {}
                        })
                    },{color:selected?sys.whiteColor:sys.mainColor}]}>{this.props.info}</Text>
                </View>
            </TouchableOpacity>
        )

    }
}



class CustomEthdxButton extends Component {


    constructor() {
        super();
        this.state = {
            selected: false,
            dwd:false,
            dxds:false,

        };
    }



    render() {

        const { selected } = this.state;
        // console.log(">>>>render>>>"+selected);

        return (

            <TouchableOpacity  ref={this.props.info} title={this.props.info} onPress={()=>{


                // if (k3this.state.visible) {
                //     k3this.refs.toast.show('正在加载赔率', DURATION.LENGTH_LONG);
                
                //     return;
                // }
                // let isCunZai = k3this.state.k3DataList.hasOwnProperty('peilv')

                // if (!isCunZai) {
                //     k3this.refs.toast.show('赔率没加载成功', DURATION.LENGTH_LONG);
          
                //     return;
                // }

                this.setState({  
                    selected : !this.state.selected
                },() => {
                    this.props.onPress()
                })

            }}  activeOpacity={0.2} focusedOpacity={0.5}>
                {/*<View style=  {{justifyContent:'center',alignItems:'center',width:128,height:128,backgroundColor:'#841584'}}>*/}
                <View style= {[{marginLeft:10,
                    marginTop:10,
                    width:(RIGHT_WIDTH-70)/6,
                    height:(RIGHT_WIDTH-70)/6,
                    backgroundColor:sys.whiteColor,
                    borderRadius:5,},{backgroundColor:selected?sys.mainColor:sys.whiteColor
                    ,borderWidth:selected?0:1,borderColor:sys.grayColor
                    }]}>
                    {/*<Image source={require('./image/ic_search.png')}>*/}
                    {/*</Image>*/}
                    <Text style={
                        {width:(RIGHT_WIDTH-70)/6,
                        height:(RIGHT_WIDTH-70)/6,
                        color:selected?sys.whiteColor:sys.mainColor,
                        textAlign:'center',
                        textAlignVertical:'center',
                        ...Platform.select({
                            ios: { lineHeight: (RIGHT_WIDTH-70)/6},
                            android: {}
                        })

                    }}>{this.props.info}</Text>
                </View>
            </TouchableOpacity>
        )

    }
}



const styles = StyleSheet.create(
    {

        container: {
            flex: 1,
            marginTop: Platform.OS == 'ios' ? 0 : 0,
            backgroundColor:sys.whiteColor
        },

        hengcontainer:{
            flexDirection:'row',
            marginTop: Platform.OS == 'ios' ? 0 : 0,
            backgroundColor:'white'
        },
        leftcontainer:{
            width:LEFT_WIDTH,
            height:LEFT_WIDTH,
            marginLeft:0,
            flex: 1,
            marginTop: Platform.OS == 'ios' ? 0 : 0,
            backgroundColor:'red'
        },
        rightcontainer: {
            marginLeft:0,
            flex: 1,
            marginTop: Platform.OS == 'ios' ? 0 : 0,
            backgroundColor:'white',
        },


        customButton: {
            marginLeft:10,
            marginTop:10,
            width:(RIGHT_WIDTH-50)/4,
            height:(RIGHT_WIDTH-50)/4,
            backgroundColor:sys.whiteColor,
            borderRadius:5,
            // borderTopLeftRadius: 5,
            // borderTopRightRadius: 5,
            // borderBottomRightRadius: 5,
            // borderBottomLeftRadius: 5,
            
        },
        customButtonItem: {
            width:(RIGHT_WIDTH-50)/4,
            height:(RIGHT_WIDTH-50)/8,
            color:sys.titleColor,
            textAlign:'center',
            textAlignVertical:'center',
            ...Platform.select({
                ios: { lineHeight: (RIGHT_WIDTH-50)/8},
                android: {}
            })
        },
        leftButtonItem: {
            color:sys.titleColor,
            textAlign:'center',
            textAlignVertical:'center',
            width:LEFT_WIDTH-20,
            height:50,
            ...Platform.select({
                ios: { lineHeight: 50},
                 android: {}
            })
        },
        leftButton: {
            marginLeft:10,
            marginTop:10,
            width:LEFT_WIDTH-20,
            height:50,
            backgroundColor:sys.backgroundColor,
            borderRadius:5,
            // borderTopLeftRadius: 5,
            // borderTopRightRadius: 5,
            // borderBottomRightRadius: 5,
            // borderBottomLeftRadius: 5,

        },

        bottomPourHv:{
            flexDirection:'row',
            marginLeft:0,
            marginTop:0,
            width:sys.dwidth,
            height:30
        },
        lineview:{
            height:0.8,//TODO这里小于0.8没显示出来
            backgroundColor:'#cccccc',
            marginTop:0,
            marginLeft:12,
            width:sys.dwidth-24,
        },

        beishuView:{
            height: 45,
            width: SCREEN_WIDTH,
            flexDirection:'row',
           // backgroundColor:sys.silveryColor
        },
        reduceBtn:{
            height: 30,
            width: 30,
            top:10,
            borderRadius: 3,
            backgroundColor: sys.mainColor,
            justifyContent: 'center',
            overflow: 'hidden',
            margin:2,
        },
        payButtonText: {
            color: "white",
            textAlign: 'center',
        },
        footer: {
            height: 60,
            width: SCREEN_WIDTH,
            flexDirection:'row',
            // backgroundColor:sys.whiteColor,
        },
        yuerbar: {
            height: 60,
            width: SCREEN_WIDTH/4,
            justifyContent: 'center',
            alignContent: 'center',
        },
        nameHeader: {
            color: sys.subTitleColor,
            fontSize: 16,
            margin:5,
            // fontFamily: 'regular',
            textAlign: 'center'
        },
        yuer:{
            color:sys.mainColor,
            fontSize: 17,
            textAlign: 'center'
        },
        payButton:{
            height: 30,
            width: 60,
            top:10,
            borderRadius: 3,
            backgroundColor: sys.mainColor,
            justifyContent: 'center',
            overflow: 'hidden',
            margin:2,
        },
        beishuCount:{
            marginTop:10,
            height:35,
            width: 60,
            lineHeight:15,
            borderRadius: 3,
            fontSize:16,
            textAlign: 'center',
            overflow: 'hidden',
            backgroundColor: 'white',
            paddingTop: 5
        },

    }
)



































